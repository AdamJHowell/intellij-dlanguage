D Language File
  PsiComment(DLanguageTokenType.line_comment)('// Functions can also be declared as 'ref', meaning their return value is')
  PsiComment(DLanguageTokenType.line_comment)('// passed by reference:')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      PsiElement(DLanguageTokenType.ref)('ref')
    DLanguageDeclaration2Impl(DECLARATION_2)
      DLanguageFunctionDeclarationImpl(FUNCTION_DECLARATION)
        DLanguageTypeImpl(TYPE)
          DLanguageType2Impl(TYPE_2)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DLanguageTokenType.int)('int')
        DLanguageIdentifierImpl(IDENTIFIER)
          PsiElement(DLanguageTokenType.ID)('func2')
        DLanguageParametersImpl(PARAMETERS)
          PsiElement(DLanguageTokenType.()('(')
          PsiElement(DLanguageTokenType.))(')')
        DLanguageFunctionBodyImpl(FUNCTION_BODY)
          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
            PsiElement(DLanguageTokenType.{)('{')
            DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
              DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                DLanguageDeclarationImpl(DECLARATION)
                  DLanguageAttributeImpl(ATTRIBUTE)
                    PsiElement(DLanguageTokenType.static)('static')
                  DLanguageDeclaration2Impl(DECLARATION_2)
                    DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                      DLanguageTypeImpl(TYPE)
                        DLanguageType2Impl(TYPE_2)
                          DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                            PsiElement(DLanguageTokenType.int)('int')
                      DLanguageDeclaratorImpl(DECLARATOR)
                        DLanguageIdentifierImpl(IDENTIFIER)
                          PsiElement(DLanguageTokenType.ID)('y')
                        PsiElement(DLanguageTokenType.=)('=')
                        DLanguageInitializerImpl(INITIALIZER)
                          DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLanguageTernaryExpressionImpl(TERNARY_EXPRESSION)
                                DLanguageOrOrExpressionImpl(OR_OR_EXPRESSION)
                                  DLanguageAndAndExpressionImpl(AND_AND_EXPRESSION)
                                    DLanguageOrExpressionImpl(OR_EXPRESSION)
                                      DLanguageXorExpressionImpl(XOR_EXPRESSION)
                                        DLanguageAndExpressionImpl(AND_EXPRESSION)
                                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                            DLanguageRelExpressionImpl(REL_EXPRESSION)
                                              DLanguageShiftExpressionImpl(SHIFT_EXPRESSION)
                                                DLanguageAddExpressionImpl(ADD_EXPRESSION)
                                                  DLanguageMulExpressionImpl(MUL_EXPRESSION)
                                                    DLanguagePowExpressionImpl(POW_EXPRESSION)
                                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                      PsiElement(DLanguageTokenType.;)(';')
              DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                DLanguageStatementImpl(STATEMENT)
                  DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                    DLanguageReturnStatementImpl(RETURN_STATEMENT)
                      PsiElement(DLanguageTokenType.return)('return')
                      DLanguageExpressionImpl(EXPRESSION)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageTernaryExpressionImpl(TERNARY_EXPRESSION)
                            DLanguageOrOrExpressionImpl(OR_OR_EXPRESSION)
                              DLanguageAndAndExpressionImpl(AND_AND_EXPRESSION)
                                DLanguageOrExpressionImpl(OR_EXPRESSION)
                                  DLanguageXorExpressionImpl(XOR_EXPRESSION)
                                    DLanguageAndExpressionImpl(AND_EXPRESSION)
                                      DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                        DLanguageRelExpressionImpl(REL_EXPRESSION)
                                          DLanguageShiftExpressionImpl(SHIFT_EXPRESSION)
                                            DLanguageAddExpressionImpl(ADD_EXPRESSION)
                                              DLanguageMulExpressionImpl(MUL_EXPRESSION)
                                                DLanguagePowExpressionImpl(POW_EXPRESSION)
                                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                      DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                                        DLanguageIdentifierImpl(IDENTIFIER)
                                                          PsiElement(DLanguageTokenType.ID)('y')
                      PsiElement(DLanguageTokenType.;)(';')
            PsiElement(DLanguageTokenType.})('}')
  PsiElement(DLanguageTokenType.void)('void')
  PsiElement(DLanguageTokenType.ID)('main')
  PsiElement(DLanguageTokenType.()('(')
  PsiElement(DLanguageTokenType.))(')')
  PsiElement(DLanguageTokenType.{)('{')
  PsiElement(DLanguageTokenType.ID)('func2')
  PsiElement(DLanguageTokenType.()('(')
  PsiElement(DLanguageTokenType.))(')')
  PsiElement(DLanguageTokenType.=)('=')
  PsiErrorElement:'2' unexpected
    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('2')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.;)(';')
    PsiComment(DLanguageTokenType.line_comment)('// The return value of func2() can be modified.')
    PsiElement(DLanguageTokenType.assert)('assert')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.ID)('func2')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.==)('==')
    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('2')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
  PsiElement(DUMMY_BLOCK)
    PsiComment(DLanguageTokenType.line_comment)('// However, the reference returned by func2() does not propagate to')
    PsiComment(DLanguageTokenType.line_comment)('// variables, because the 'ref' only applies to the return value itself,')
    PsiComment(DLanguageTokenType.line_comment)('// not to any subsequent variable created from it:')
    PsiElement(DLanguageTokenType.auto)('auto')
    PsiElement(DLanguageTokenType.ID)('x')
    PsiElement(DLanguageTokenType.=)('=')
    PsiElement(DLanguageTokenType.ID)('func2')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.static)('static')
    PsiElement(DLanguageTokenType.assert)('assert')
    PsiElement(DLanguageTokenType.()('(')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.typeof)('typeof')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.ID)('x')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.==)('==')
    PsiElement(DLanguageTokenType.int)('int')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
    PsiComment(DLanguageTokenType.line_comment)('// N.B.: *not* ref(int);')
    PsiComment(DLanguageTokenType.line_comment)('// there is no such type as ref(int).')
    PsiElement(DLanguageTokenType.ID)('x')
    PsiElement(DLanguageTokenType.++)('++')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.assert)('assert')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.ID)('x')
    PsiElement(DLanguageTokenType.==)('==')
    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.assert)('assert')
    PsiElement(DLanguageTokenType.()('(')
  PsiElement(DLanguageTokenType.ID)('func2')
  PsiElement(DLanguageTokenType.()('(')
  PsiElement(DLanguageTokenType.))(')')
  PsiElement(DLanguageTokenType.==)('==')
  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('2')
  PsiElement(DLanguageTokenType.))(')')
  PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.line_comment)('// x is not a reference to what func2() returned; it')
  PsiComment(DLanguageTokenType.line_comment)('// does not inherit the ref storage class from func2().')
  PsiElement(DLanguageTokenType.})('}')