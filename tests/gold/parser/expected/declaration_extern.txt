D Language File
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      DLanguageLinkageAttributeImpl(LINKAGE_ATTRIBUTE)
        PsiElement(DLanguageTokenType.extern)('extern')
        PsiElement(DLanguageTokenType.()('(')
        DLanguageIdentifierImpl(IDENTIFIER)
          PsiElement(DLanguageTokenType.ID)('C')
        PsiElement(DLanguageTokenType.))(')')
    DLanguageDeclaration2Impl(DECLARATION_2)
      DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageTypeImpl(TYPE)
          DLanguageType2Impl(TYPE_2)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DLanguageTokenType.int)('int')
        DLanguageDeclaratorImpl(DECLARATOR)
          DLanguageIdentifierImpl(IDENTIFIER)
            PsiElement(DLanguageTokenType.ID)('foo')
        PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.line_comment)('// variable allocated and initialized in this module with C linkage')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      PsiElement(DLanguageTokenType.extern)('extern')
    DLanguageAttributeImpl(ATTRIBUTE)
      DLanguageLinkageAttributeImpl(LINKAGE_ATTRIBUTE)
        PsiElement(DLanguageTokenType.extern)('extern')
        PsiElement(DLanguageTokenType.()('(')
        DLanguageIdentifierImpl(IDENTIFIER)
          PsiElement(DLanguageTokenType.ID)('C')
        PsiElement(DLanguageTokenType.))(')')
    DLanguageDeclaration2Impl(DECLARATION_2)
      DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageTypeImpl(TYPE)
          DLanguageType2Impl(TYPE_2)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DLanguageTokenType.int)('int')
        DLanguageDeclaratorImpl(DECLARATOR)
          DLanguageIdentifierImpl(IDENTIFIER)
            PsiElement(DLanguageTokenType.ID)('bar')
        PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.line_comment)('// variable allocated outside this module with C linkage')
  PsiComment(DLanguageTokenType.line_comment)('// (e.g. in a statically linked C library or another module)')