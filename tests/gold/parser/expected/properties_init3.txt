D Language File
  PsiElement(DLanguageTokenType.struct)('struct')
  PsiElement(DLanguageTokenType.ID)('S')
  PsiElement(DLanguageTokenType.{)('{')
  PsiElement(DLanguageTokenType.int)('int')
  PsiElement(DLanguageTokenType.ID)('a')
  PsiElement(DLanguageTokenType.;)(';')
  PsiElement(DLanguageTokenType.@)('@')
  PsiErrorElement:DLanguageTokenType.( or DLanguageTokenType.ID expected, got 'disable'
    PsiElement(DLanguageTokenType.disable)('disable')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.this)('this')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.this)('this')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.int)('int')
    PsiElement(DLanguageTokenType.ID)('n')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.{)('{')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.ID)('a')
    PsiElement(DLanguageTokenType.=)('=')
    PsiElement(DLanguageTokenType.ID)('n')
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.})('}')
    PsiElement(DLanguageTokenType.invariant)('invariant')
    PsiElement(DLanguageTokenType.{)('{')
    PsiElement(DLanguageTokenType.assert)('assert')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.ID)('a')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.>)('>')
    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.})('}')
    PsiElement(DLanguageTokenType.void)('void')
    PsiElement(DLanguageTokenType.ID)('check')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.{)('{')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.})('}')
    PsiElement(DLanguageTokenType.})('}')
    PsiElement(DLanguageTokenType.void)('void')
    PsiElement(DLanguageTokenType.ID)('main')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.{)('{')
    PsiComment(DLanguageTokenType.line_comment)('//S s1;           // Error: variable s1 initializer required for type S')
    PsiComment(DLanguageTokenType.line_comment)('//S s2 = S();     // Error: constructor S.this is not callable')
    PsiComment(DLanguageTokenType.line_comment)('// because it is annotated with @disable')
    PsiElement(DLanguageTokenType.ID)('S')
    PsiElement(DLanguageTokenType.ID)('s3')
    PsiElement(DLanguageTokenType.=)('=')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DLanguageTokenType.ID)('S')
    PsiElement(DLanguageTokenType..)('.')
    PsiElement(DLanguageTokenType.ID)('init')
    PsiElement(DLanguageTokenType.;)(';')
    PsiComment(DLanguageTokenType.line_comment)('// Bad. s3.a == 0, and it violates the invariant of S.')
    PsiElement(DLanguageTokenType.ID)('s3')
    PsiElement(DLanguageTokenType..)('.')
    PsiElement(DLanguageTokenType.ID)('check')
    PsiElement(DLanguageTokenType.()('(')
    PsiElement(DLanguageTokenType.))(')')
    PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.line_comment)('// Assertion failure.')
  PsiElement(DLanguageTokenType.})('}')