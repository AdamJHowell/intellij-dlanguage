DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Sum')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('add')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('y')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('y')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('Sum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sum')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Sum')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('sum')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('add')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('7')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('sum')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('add')
DLanguageTokenType.( ('(')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')