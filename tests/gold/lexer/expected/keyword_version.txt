DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('k')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.version ('version')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Demo')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.line_comment ('// compile in this code block for the demo version')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('k')
DLanguageTokenType.; (';')
WHITE_SPACE ('    ')
DLanguageTokenType.line_comment ('// error, k already defined')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')