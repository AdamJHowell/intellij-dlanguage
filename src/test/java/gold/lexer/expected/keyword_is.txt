DLanguageTokenType.import ('import')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdio')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('main')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.const ('const')
DLanguageTokenType.) (')')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')