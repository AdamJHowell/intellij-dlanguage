DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D std._parallelism) implements high-level primitives for SMP _parallelism.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('These include parallel foreach, parallel reduce, parallel eager map, pipelining')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('and future')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('promise _parallelism.  $(D std._parallelism) is recommended when the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('same operation is to be executed in parallel on different data, or when a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('function is to be executed in a background thread and its result returned to a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('well-defined main thread.  For communication between arbitrary threads, see')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D std.concurrency).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D std._parallelism) is based on the concept of a $(D Task).  A $(D Task) is an')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('object that represents the fundamental unit of work in this library and may be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('executed in parallel with any other $(D Task).  Using $(D Task)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('directly allows programming with a future')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('promise paradigm.  All other')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('supported _parallelism paradigms (parallel foreach, map, reduce, pipelining)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('represent an additional level of abstraction over $(D Task).  They')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('automatically create one or more $(D Task) objects, or closely related types')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('that are conceptually identical but not part of the public API.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('After creation, a $(D Task) may be executed in a new thread, or submitted')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('to a $(D TaskPool) for execution.  A $(D TaskPool) encapsulates a task queue')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('and its worker threads.  Its purpose is to efficiently map a large')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('number of $(D Task)s onto a smaller number of threads.  A task queue is a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('FIFO queue of $(D Task) objects that have been submitted to the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D TaskPool) and are awaiting execution.  A worker thread is a thread that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('is associated with exactly one task queue.  It executes the $(D Task) at the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('front of its queue when the queue has work available, or sleeps when')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('no work is available.  Each task queue is associated with zero or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('more worker threads.  If the result of a $(D Task) is needed before execution')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('by a worker thread has begun, the $(D Task) can be removed from the task queue')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('and executed immediately in the thread where the result is needed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Warning:  Unless marked as $(D @trusted) or $(D @safe), artifacts in')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('          this module allow implicit data sharing between threads and cannot')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('          guarantee that client code is free from low level data races.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Source:    $(PHOBOSSRC std')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('_parallelism.d)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Author:  David Simcha')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Copyright:  Copyright (c) 2009-2011, David Simcha.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('License:    $(HTTP boost.org')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('LICENSE_1_0.txt, Boost License 1.0)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.module ('module')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallelism')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('///')
WHITE_SPACE ('\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('map')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('range')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('math')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallelism')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Parallel reduce can be combined with')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// std.algorithm.map to interesting effect.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The following example (thanks to Russel Winder)')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// calculates pi by quadrature  using')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// std.algorithm.map and TaskPool.reduce.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// getTerm is evaluated in parallel as needed by')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// TaskPool.reduce.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('//')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Timings on an Intel i5-3450 quad core machine')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// for n = 1_000_000_000:')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('//')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// TaskPool.reduce:       1.067 s')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// std.algorithm.reduce:  4.011 s')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('n')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('delta')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('n')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('getTerm')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('0.5')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('delta')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('delta')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pi')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('4.0')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('n')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('getTerm')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pi')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.( ('(')
DLanguageTokenType.FLOAT_LITERAL ('3.1415926')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('atomic')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('memory')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sync')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('condition')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('conv')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('functional')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('math')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('meta')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('range')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('traits')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('typecons')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('OSX')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.version ('version')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('useSysctlbyname')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('FreeBSD')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.version ('version')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('useSysctlbyname')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('NetBSD')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.version ('version')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('useSysctlbyname')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Windows')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// BUGS:  Only works on Windows 2000 and above.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sys')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('windows')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('windows')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('SYSTEM_INFO')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('GetSystemInfo')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('SYSTEM_INFO')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('si')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('GetSystemInfo')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('si')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('max')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('si')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('dwNumberOfProcessors')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('linux')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sys')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('posix')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('unistd')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_SC_NPROCESSORS_ONLN')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sysconf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sysconf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_SC_NPROCESSORS_ONLN')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Solaris')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sys')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('posix')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('unistd')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_SC_NPROCESSORS_ONLN')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sysconf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sysconf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_SC_NPROCESSORS_ONLN')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('useSysctlbyname')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.extern ('extern')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sysctlbyname')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.char ('char')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('OSX')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nameStr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"machdep.cpu.core_count\0"')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('FreeBSD')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nameStr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"hw.ncpu\0"')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('NetBSD')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nameStr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"hw.ncpu\0"')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ans')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('sysctlbyname')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nameStr')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('ans')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('len')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ans')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Don't know how to get N CPUs on this OS."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cacheLineSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('cpuid')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('datacache')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lineSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('cachelevel')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('datacache')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('cachelevel')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('lineSize')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lineSize')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cachelevel')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('lineSize')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('lineSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cachelevel')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('lineSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('cacheLineSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lineSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT (' Atomics code.  These forward to core.atomic, but are written like this')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('   for two reasons:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('   1.  They used to actually contain ASM code and I don' want to have to change')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       to directly calling core.atomic in a zillion different places.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('   2.  core.atomic has some misc. issues that make my use cases difficult')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       without wrapping it.  If I didn't wrap it, casts would be required')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       basically everywhere.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('stuff')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isIntegral')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('//core.atomic.cas(cast(shared) &stuff, stuff, newVal);')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('atomicStore')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.shared ('shared')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('stuff')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isIntegral')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicLoad')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.shared ('shared')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('val')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// This gets rid of the need for a lot of annoying casts in other parts of the')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// code, when enums are involved.')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicCasUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('stuff')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('testVal')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isIntegral')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('atomic')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('cas')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.shared ('shared')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('stuff')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('testVal')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('--------------------- Generic helper functions, etc.------------------------')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('MapType')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('MapType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('adjoin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('unaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReduceType')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('R')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReduceType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('noUnsharedAliasing')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('noUnsharedAliasing')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('hasUnsharedAliasing')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// This template tests whether a function may be executed in parallel from')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// @safe code via Task.executeInNewThread().  There is an additional')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// requirement for executing it via a TaskPool.  (See isSafeReturn).')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functionAttributes')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('FunctionAttribute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.| ('|')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FunctionAttribute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('trusted')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functionAttributes')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FunctionAttribute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ref_')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isFunctionPointer')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.|| ('||')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('hasUnsharedAliasing')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('allSatisfy')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('noUnsharedAliasing')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F3')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('string')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F4')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.char ('char')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F3')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F4')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F5')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('string')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F5')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// This function decides whether Tasks that meet all of the other requirements')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// for being executed from @safe code can be executed on a TaskPool.')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// When executing via TaskPool, it's theoretically possible')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// to return a value that is also pointed to by a worker thread's thread local')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// storage.  When executing from executeInNewThread(), the thread that executed')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// the Task is terminated by the time the return value is visible in the calling')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// thread, so this is a non-issue.  It's also a non-issue for pure functions')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// since they can't read global state.')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeReturn')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('hasUnsharedAliasing')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ReturnType')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeReturn')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isPure')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeReturn')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeReturn')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('randAssignable')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('randAssignable')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('hasAssignableElements')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('notStarted')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('inProgress')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('done')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AliasReturn')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AliasReturn')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Should be private, but std.algorithm.reduce is used in the zero-thread case')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// and won't work w/ private.')
WHITE_SPACE ('\n')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceAdjoin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceAdjoin')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceAdjoin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('U')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('U')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('funs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Unused')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('funs')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceFinish')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceFinish')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceFinish')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('funs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Unused')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('funs')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRoundRobin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RoundRobinBuffer')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRoundRobin')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRoundRobin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRoundRobin')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRoundRobin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('RoundRobinBuffer')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.char ('char')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isRoundRobin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// This is the base "class" for all of the other tasks.  Using C-style')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// polymorphism to allow more direct control over memory allocation, etc.')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AbstractTask')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('next')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Pointer to a function that executes this task.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.function ('function')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('runTask')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('notStarted')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('done')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('taskStatus')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('job')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('runTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D Task) represents the fundamental unit of work.  A $(D Task) may be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('executed in parallel with any other $(D Task).  Using this struct directly')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('allows future')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('promise _parallelism.  In this paradigm, a function (or delegate')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('or other callable) is executed in a thread other than the one it was called')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('from.  The calling thread does not block while the function is being executed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('A call to $(D workForce), $(D yieldForce), or $(D spinForce) is used to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('ensure that the $(D Task) has finished executing and to obtain the return')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('value, if any.  These functions and $(D done) also act as full memory barriers,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('meaning that any memory writes made in the thread that executed the $(D Task)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('are guaranteed to be visible in the calling thread after one of these functions')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('returns.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('The $(REF task, std,parallelism) and $(REF scopedTask, std,parallelism) functions can')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('be used to create an instance of this struct.  See $(D task) for usage examples.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Function results are returned from $(D yieldForce), $(D spinForce) and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D workForce) by ref.  If $(D fun) returns by ref, the reference will point')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('to the returned reference of $(D fun).  Otherwise it will point to a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('field in this struct.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Copying of this struct is disabled, since it would provide no useful semantics.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('If you want to pass this struct around, you should do so by reference or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('pointer.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Bugs:  Changes to $(D ref) and $(D out) arguments are not propagated to the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       call site, only to $(D args) in this struct.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('base')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
DLanguageTokenType.ID ('runTask')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('impl')
DLanguageTokenType.} ('}')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('base')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('base')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('impl')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myTask')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('internal')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addressOf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myCastedTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myTask')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('addressOf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addressOf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myCastedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isScoped')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// True if created with scopedTask.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The arguments the function was called with.  Changes to $(D out) and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D ref) arguments will be visible here.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSame')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('run')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The purpose of this code is to decide whether functions whose')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// return values have unshared aliasing can be executed via')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// TaskPool from @safe code.  See isSafeReturn.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSame')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('run')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isFunctionPointer')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isPure')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('functionAttributes')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FunctionAttribute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pure_')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// BUG:  Should check this for delegates too, but std.traits')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('//       apparently doesn't allow this.  isPure is irrelevant')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('//       for delegates, at least for now since shared delegates')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('//       don't work.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isPure')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// We already know that we can't execute aliases in @safe code, so')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// just put a dummy value here.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isPure')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The return type of the function called by this $(D Task).  This can be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D void).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Ref return.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('ReturnType')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('val')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('enforcePool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Job not submitted yet."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('_args')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Work around DMD bug 6588, allow immutable elements.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('allSatisfy')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isAssignable')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Type')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tupleof')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tupleof')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tupleof')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('disable')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If the $(D Task) isn't started yet, execute it in the current thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If it's done, return its return value, if any.  If it's in progress,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    busy spin until it's done, then return the return value.  If it threw')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    an exception, rethrow that exception.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    This function should be used when you expect the result of the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D Task) to be available on a timescale shorter than that of an OS')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    context switch.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('spinForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforcePool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If the $(D Task) isn't started yet, execute it in the current thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If it's done, return its return value, if any.  If it's in progress,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    wait on a condition variable.  If it threw an exception, rethrow that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    exception.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    This function should be used for expensive functions, as waiting on a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    condition variable introduces latency, but avoids wasted CPU cycles.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforcePool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('waiterLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('waiterUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('waitUntilCompletion')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('exception')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If this $(D Task) was not started yet, execute it in the current')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    thread.  If it is finished, return its result.  If it is in progress,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    execute any other $(D Task) from the $(D TaskPool) instance that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    this $(D Task) was submitted to until this one')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    is finished.  If it threw an exception, rethrow that exception.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If no other tasks are available or this $(D Task) was executed using')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D executeInNewThread), wait on a condition variable.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforcePool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.true ('true')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// done() implicitly checks for exceptions.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('job')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Locking explicitly and calling popNoSync() because')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// pop() waits on a condition variable if there are no Tasks')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// in the queue.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('job')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('verboseUnittest')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Doing workForce work."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('doJob')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ReturnType')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fixRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('verboseUnittest')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Yield from workForce."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Returns $(D true) if the $(D Task) is finished executing.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Throws:  Rethrows any exception thrown during the execution of the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('             $(D Task).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('done')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Explicitly forwarded for documentation purposes.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('base')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Create a new thread for executing this $(D Task), execute it in the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    newly created thread, then terminate the thread.  This can be used for')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    future')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('promise parallelism.  An explicit priority may be given')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    to the $(D Task).  If one is provided, its value is forwarded to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D core.thread.Thread.priority). See $(REF task, std,parallelism) for')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    usage example.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('executeInNewThread')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('executeInNewThread')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isScoped')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// When this is uncommented, it somehow gets called on returning from')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// scopedTask even though the struct shouldn't be getting copied.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('//@disable this(this) {}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Calls $(D fpOrDelegate) with $(D args).  This is an')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// adapter that makes $(D Task) work with delegates, function pointers and')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// functors instead of just aliases.')
WHITE_SPACE ('\n')
DLanguageTokenType.ID ('ReturnType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('run')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fpOrDelegate')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fpOrDelegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Creates a $(D Task) on the GC heap that calls an alias.  This may be executed')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('via $(D Task.executeInNewThread) or by submitting to a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(REF TaskPool, std,parallelism).  A globally accessible instance of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D TaskPool) is provided by $(REF taskPool, std,parallelism).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Returns:  A pointer to the $(D Task).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Read two files into memory at the same time.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('import std.file;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('void main()')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('{')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Create and execute a Task for reading')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' foo.txt.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file1Task = task!read("foo.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    file1Task.executeInNewThread();')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Read bar.txt in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file2Data = read("bar.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Get the results of reading foo.txt.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file1Data = file1Task.yieldForce;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('}')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Sorts an array using a parallel quick sort algorithm.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' The first partition is done serially.  Both recursion')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' branches are then executed in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Timings for sorting an array of 1,000,000 doubles on')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' an Athlon 64 X2 dual core machine:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' This implementation:               176 milliseconds.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Equivalent serial implementation:  280 milliseconds')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('void parallelSort(T)(T[] data)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('{')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Sort small subarrays serially.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    if (data.length < 100)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         std.algorithm.sort(data);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         return;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Partition the array.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    swap(data[$ ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' 2], data[$ - 1]);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto pivot = data[$ - 1];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    bool lessThanPivot(T elem) { return elem < pivot; }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto greaterEqual = partition!lessThanPivot(data[0..$ - 1]);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    swap(data[$ - greaterEqual.length - 1], data[$ - 1]);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto less = data[0..$ - greaterEqual.length - 1];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    greaterEqual = data[$ - greaterEqual.length..$];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Execute both recursion branches in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto recurseTask = task!parallelSort(greaterEqual);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    taskPool.put(recurseTask);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    parallelSort(less);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    recurseTask.yieldForce;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('}')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Creates a $(D Task) on the GC heap that calls a function pointer, delegate, or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('class')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('struct with overloaded opCall.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Read two files in at the same time again,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' but this time use a function pointer instead')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' of an alias to represent std.file.read.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('import std.file;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('void main()')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('{')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Create and execute a Task for reading')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' foo.txt.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file1Task = task(&read, "foo.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    file1Task.executeInNewThread();')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Read bar.txt in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file2Data = read("bar.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Get the results of reading foo.txt.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file1Data = file1Task.yieldForce;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('}')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Notes: This function takes a non-scope delegate, meaning it can be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       used with closures.  If you can't allocate a closure due to objects')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       on the stack that have scoped destruction, see $(D scopedTask), which')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('       takes a scope delegate.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT (' ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Version of $(D task) usable from $(D @safe) code.  Usage mechanics are')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('identical to the non-@safe case, but safety introduces some restrictions:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('1.  $(D fun) must be @safe or @trusted.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('2.  $(D F) must not have any unshared aliasing as defined by')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(REF hasUnsharedAliasing, std,traits).  This means it')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    may not be an unshared delegate or a non-shared class or struct')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    with overloaded $(D opCall).  This also precludes accepting template')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    alias parameters.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('3.  $(D Args) must not have unshared aliasing.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('4.  $(D fun) must not return by reference.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('5.  The return type must not have unshared aliasing unless $(D fun) is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D pure) or the $(D Task) is executed via $(D executeInNewThread) instead')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    of using a $(D TaskPool).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE (' ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('These functions allow the creation of $(D Task) objects on the stack rather')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('than the GC heap.  The lifetime of a $(D Task) created by $(D scopedTask)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('cannot exceed the lifetime of the scope it was created in.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('$(D scopedTask) might be preferred over $(D task):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('1.  When a $(D Task) that calls a delegate is being created and a closure')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    cannot be allocated due to objects on the stack that have scoped')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    destruction.  The delegate overload of $(D scopedTask) takes a $(D scope)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    delegate.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('2.  As a micro-optimization, to avoid the heap allocation associated with')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D task) or with the creation of a closure.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Usage is otherwise identical to $(D task).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Notes:  $(D Task) objects created using $(D scopedTask) will automatically')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('call $(D Task.yieldForce) in their destructor if necessary to ensure')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('the $(D Task) is complete before the stack frame they reside on is destroyed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isScoped')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.scope ('scope')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('delegateOrFp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isScoped')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE (' ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('F')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSafeTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('F')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('F')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isScoped')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('The total number of CPU cores available on the current machine, as reported by')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('the operating system.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('totalCPUs')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('This class serves two purposes:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('1.  It distinguishes std.parallelism threads from other threads so that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    the std.parallelism daemon threads can be terminated.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('2.  It adds a reference to the pool that the thread is a member of,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    which is also necessary to allow the daemon threads to be properly')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    terminated.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.final ('final')
WHITE_SPACE (' ')
DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelismThread')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.super ('super')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Kill daemon threads.')
WHITE_SPACE ('\n')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pthread')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ParallelismThread')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pthread')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pthread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isDaemon')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pthread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('join')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('This class encapsulates a task queue and a set of worker threads.  Its purpose')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('is to efficiently map a large number of $(D Task)s onto a smaller number of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('threads.  A task queue is a FIFO queue of $(D Task) objects that have been')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('submitted to the $(D TaskPool) and are awaiting execution.  A worker thread is a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('thread that executes the $(D Task) at the front of the queue when one is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('available and sleeps when the queue is empty.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('This class should usually be used via the global instantiation')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('available via the $(REF taskPool, std,parallelism) property.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Occasionally it is useful to explicitly instantiate a $(D TaskPool):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('1.  When you want $(D TaskPool) instances with multiple priorities, for example')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    a low priority pool and a high priority pool.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('2.  When the threads in the global task pool are waiting on a synchronization')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    primitive (for example a mutex), and you want to parallelize the code that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    needs to run before these threads can be resumed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT (' ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.final ('final')
WHITE_SPACE (' ')
DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// A pool can either be a regular pool or a single-task pool.  A')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// single-task pool is a dummy pool that's fired up for')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Task.executeInNewThread().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ParallelismThread')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Thread')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('singleTaskThread')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('PoolState')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('running')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Condition')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerCondition')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Condition')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterCondition')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Mutex')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Mutex')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterMutex')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// For waiterCondition')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The instanceStartIndex of the next instance that will be created.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.__gshared ('__gshared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextInstanceIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The index of the current thread.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('threadIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The index of the first thread in this instance.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('instanceStartIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The index that the next thread to be initialized in this pool will have.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextThreadIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('running')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('finishing')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('stopNow')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doJob')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('job')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('inProgress')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('waiterLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('notifyWaiters')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('job')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('job')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// This function is used for dummy pools created by Task.executeInNewThread().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doSingleTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// No synchronization.  Pool is guaranteed to only have one thread,')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// and the queue is submitted to before this thread is created.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('head')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('doJob')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// This function performs initialization for each thread that affects')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// thread local storage and therefore must be done from within the')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// worker thread.  It then calls executeWorkLoop().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('startWorkLoop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Initialize thread index.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('threadIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextThreadIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('nextThreadIndex')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('executeWorkLoop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// This is the main work loop that worker threads spend their time in')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// until they terminate.  It's also entered by non-worker threads when')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// finish() is called with the blocking variable set to true.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('executeWorkLoop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stopNow')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicReadUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('finishing')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stopNow')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('doJob')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Pop a task off the queue.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('running')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('wait')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.out ('out')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT (' If task.prev and task.next aren't null, then another thread')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' can try to delete this task from the pool after it's')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' alreadly been deleted')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('popped.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('returned')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('returned')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('inProgress')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('returned')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Push a task onto the queue.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('abstractPut')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('abstractPutNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('abstractPutNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.in ('in')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.out ('out')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.CHARACTER_LITERAL (''\t'')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.CHARACTER_LITERAL (''\t'')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Not using enforce() to save on function call overhead since this')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// is a performance critical function.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('running')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Error')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot submit a new task to a pool after calling "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"finish() or stop()."')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('   ')
DLanguageTokenType.LINE_COMMENT ('//Queue is empty.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('notify')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('abstractPutGroupNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('h')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('running')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Error')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot submit a new task to a pool after calling "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"finish() or stop()."')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('h')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('h')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('h')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toExecute')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('deleteItem')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toExecute')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('toExecute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('job')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Exception')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('toExecute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toExecute')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('deleteItem')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('deleteItemNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('deleteItemNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.!= ('!=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('notStarted')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('inProgress')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('head')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Make sure head gets set properly.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('popNoSync')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tail')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tail')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// Check queue consistency.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// Check queue consistency.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('item')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('lock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('unlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterMutex')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('lock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterMutex')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('unlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wait')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerCondition')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('wait')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('notify')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerCondition')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('notify')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerCondition')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waitUntilCompletion')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('singleTaskThread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('join')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('waiterCondition')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('wait')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('notifyWaiters')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSingleTask')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('waiterCondition')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Private constructor for creating dummy pools that only have one thread,')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// only execute one Task, and then terminate.  This is used for')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Task.executeInNewThread().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('AbstractTask')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Dummy value, not used.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('instanceStartIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isSingleTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('inProgress')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('head')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('singleTaskThread')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('doSingleTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('singleTaskThread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('start')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Disabled until writing code to support')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// running thread with specified priority')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// See https://d.puremagic.com/issues/show_bug.cgi?id=8960')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('if (priority != int.max)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            singleTaskThread.priority = priority;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.public ('public')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// This is used in parallel_algorithm but is too unstable to document')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// as public API.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rangeLen')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rangeLen')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('eightSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('rangeLen')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('eightSize')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('rangeLen')
WHITE_SPACE (' ')
DLanguageTokenType.% ('%')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('eightSize')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('max')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ret')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Default constructor that initializes a $(D TaskPool) with')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D totalCPUs) - 1 worker threads.  The minus 1 is included because the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    main thread will also be available to do work.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Note:  On single-core machines, the primitives provided by $(D TaskPool)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('           operate transparently in single-threaded mode.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Allows for custom number of worker threads.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nWorkers')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.synchronized ('synchronized')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeid ('typeid')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('instanceStartIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextInstanceIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// The first worker thread to be initialized will have this index,')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// and will increment it.  The second worker to be initialized will')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// have this index plus 1.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('nextThreadIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('instanceStartIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('nextInstanceIndex')
WHITE_SPACE (' ')
DLanguageTokenType.+= ('+=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nWorkers')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueMutex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Mutex')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('waiterMutex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Mutex')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('workerCondition')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Condition')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('queueMutex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('waiterCondition')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Condition')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('waiterMutex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelismThread')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('nWorkers')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolThread')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolThread')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelismThread')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('startWorkLoop')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolThread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolThread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('start')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Implements a parallel foreach loop over a range.  This works by implicitly')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    creating and submitting one $(D Task) to the $(D TaskPool) for each worker')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    thread.  A work unit is a set of consecutive elements of $(D range) to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    be processed by a worker thread between communication with any other')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    thread.  The number of elements processed per work unit is controlled by the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D workUnitSize) parameter.  Smaller work units provide better load')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    balancing, but larger work units avoid the overhead of communicating')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    with other threads frequently to fetch the next work unit.  Large work')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    units also avoid false sharing in cases where the range is being modified.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The less time a single iteration of the loop takes, the larger')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D workUnitSize) should be.  For very expensive loop bodies,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D workUnitSize) should  be 1.  An overload that chooses a default work')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    unit size is also available.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find the logarithm of every number from 1 to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' 10_000_000 in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto logs = new double[10_000_000];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Parallel foreach works with or without an index')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' variable.  It can be iterate by ref if range.front')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' returns by ref.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Iterate over logs using work units of size 100.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    foreach (i, ref elem; taskPool.parallel(logs, 100))')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        elem = log(i + 1.0);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Same thing, but use the default work unit size.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Timings on an Athlon 64 X2 dual core machine:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Parallel foreach:  388 milliseconds')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Regular foreach:   619 milliseconds')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    foreach (i, ref elem; taskPool.parallel(logs))')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        elem = log(i + 1.0);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Notes:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The memory usage of this implementation is guaranteed to be constant')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    in $(D range.length).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Breaking from a parallel foreach loop via a break, labeled break,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    labeled continue, return or goto statement throws a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D ParallelForeachError).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    In the case of non-random access ranges, parallel foreach buffers lazily')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    to an array of size $(D workUnitSize) before executing the parallel portion')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    of the loop.  The exception is that, if a parallel foreach is executed')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    over a range returned by $(D asyncBuf) or $(D map), the copying is elided')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    and the buffers are simply swapped.  In this case $(D workUnitSize) is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ignored and the work unit size is set to the  buffer size of $(D range).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    A memory barrier is guaranteed to be executed on exit from the loop,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    so that results produced by all threads are visible in the calling thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    When at least one exception is thrown from inside a parallel foreach loop,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    the submission of additional $(D Task) objects is terminated as soon as')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    possible, in a non-deterministic manner.  All executing or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    enqueued work units are allowed to complete.  Then, all exceptions that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    were thrown by any work unit are chained using $(D Throwable.next) and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    rethrown.  The order of the exception chaining is non-deterministic.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"workUnitSize must be > 0."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RetType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RetType')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Default work unit size is such that we would use 4x as many')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// slots as are in this thread pool.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Just use a really, really dumb guess if the user is too lazy to')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// specify.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('512')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('///')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Eager parallel map.  The eagerness of this function means it has less')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        overhead than the lazily evaluated $(D TaskPool.map) and should be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        preferred where the memory requirements of eagerness are acceptable.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(D functions) are the functions to be evaluated, passed as template')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        alias parameters in a style similar to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(REF map, std,algorithm,iteration).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        The first argument must be a random access range. For performance')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        reasons, amap will assume the range elements have not yet been')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        initialized. Elements will be overwritten without calling a destructor')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        nor doing an assignment. As such, the range must not contain meaningful')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        data: either un-initialized objects, or objects in their $(D .init)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        state.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto numbers = iota(100_000_000.0);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find the square roots of numbers.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Timings on an Athlon 64 X2 dual core machine:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Parallel eager map:                   0.802 s')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Equivalent serial implementation:     1.768 s')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto squareRoots = taskPool.amap!sqrt(numbers);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Immediately after the range argument, an optional work unit size argument')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        may be provided.  Work units as used by $(D amap) are identical to those')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        defined for parallel foreach.  If no work unit size is provided, the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        default work unit size is used.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Same thing, but make work unit size 100.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto squareRoots = taskPool.amap!sqrt(numbers, 100);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        An output range for returning the results may be provided as the last')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        argument.  If one is not provided, an array of the proper type will be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        allocated on the garbage collected heap.  If one is provided, it must be a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        random access range with assignable elements, must have reference')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        semantics with respect to assignment to its elements, and must have the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        same length as the input range.  Writing to adjacent elements from')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        different threads must be safe.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Same thing, but explicitly allocate an array')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' to return the results in.  The element type')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' of the array may be either the exact type')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' returned by functions or an implicit conversion')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' target.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto squareRoots = new float[numbers.length];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        taskPool.amap!sqrt(numbers, squareRoots);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Multiple functions, explicit output range, and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' explicit work unit size.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto results = new Tuple!(float, real)[numbers.length];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        taskPool.amap!(sqrt, log)(numbers, 100, results);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Note:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        A memory barrier is guaranteed to be executed after all results are written')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        but before returning so that results produced by all threads are visible')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        in the calling thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Tips:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        To perform the mapping operation in place, provide the same range for the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        input and output range.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        To parallelize the copying of a range with expensive to evaluate elements')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        to an array, pass an identity function (a function that just returns')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        whatever argument is provided to it) to $(D amap).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        When at least one exception is thrown from inside the map functions,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the submission of additional $(D Task) objects is terminated as soon as')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        possible, in a non-deterministic manner.  All currently executing or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        enqueued work units are allowed to complete.  Then, all exceptions that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        were thrown from any work unit are chained using $(D Throwable.next) and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        rethrown.  The order of the exception chaining is non-deterministic.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('adjoin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('unaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('randAssignable')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('MapType')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Can't use a user supplied buffer that's the wrong "')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                             ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"size.  (Expected  :"')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('" Got:  "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('randAssignable')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Wrong buffer type."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uninitializedArray')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('MapType')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isIntegral')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Handle as a special case:')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('emplaceRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
DLanguageTokenType.++ ('++')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Effectively -1:  chunkIndex + 1 == 0:')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('shouldContinue')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doIt')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('failure')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// If an exception is thrown, all threads should bail.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('atomicStore')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('shouldContinue')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('atomicLoad')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('shouldContinue')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myUnitIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicOp')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"+="')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitIndex')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('start')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myUnitIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('start')
WHITE_SPACE (' ')
DLanguageTokenType.>= ('>=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('atomicStore')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('shouldContinue')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.break ('break')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('end')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('min')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('start')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasSlicing')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('subrange')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('start')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('end')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('start')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('end')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('emplaceRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('subrange')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('front')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('subrange')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('start')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('end')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('emplaceRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('submitAndExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('doIt')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('///')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('map')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        A semi-lazy parallel map that can be used for pipelining.  The map')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        functions are evaluated for the first $(D bufSize) elements and stored in a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        buffer and made available to $(D popFront).  Meanwhile, in the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        background a second buffer of the same size is filled.  When the first')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        buffer is exhausted, it is swapped with the second buffer and filled while')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the values from what was originally the second buffer are read.  This')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        implementation allows for elements to be written to the buffer without')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the need for atomic operations or synchronization for each write, and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        enables the mapping function to be evaluated efficiently in parallel.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(D map) has more overhead than the simpler procedure used by $(D amap)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        but avoids the need to keep all results in memory simultaneously and works')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        with non-random access ranges.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Params:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        source = The input range to be mapped.  If $(D source) is not random')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        access it will be lazily buffered to an array of size $(D bufSize) before')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the map function is evaluated.  (For an exception to this rule, see Notes.)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        bufSize = The size of the buffer to store the evaluated elements.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        workUnitSize = The number of elements to evaluate in a single')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(D Task).  Must be less than or equal to $(D bufSize), and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        should be a fraction of $(D bufSize) such that all worker threads can be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        used.  If the default of size_t.max is used, workUnitSize will be set to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the pool-wide default.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Returns:  An input range representing the results of the map.  This range')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('                  has a length iff $(D source) has a length.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Notes:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        If a range returned by $(D map) or $(D asyncBuf) is used as an input to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(D map), then as an optimization the copying from the output buffer')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        of the first range to the input buffer of the second range is elided, even')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        though the ranges returned by $(D map) and $(D asyncBuf) are non-random')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        access ranges.  This means that the $(D bufSize) parameter passed to the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        current call to $(D map) will be ignored and the size of the buffer')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        will be the buffer size of $(D source).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Pipeline reading a file, converting each line')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' to a number, taking the logarithms of the numbers,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' and performing the additions necessary to find')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' the sum of the logarithms.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto lineRange = File("numberList.txt").byLine();')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto dupedLines = std.algorithm.map!"a.idup"(lineRange);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto nums = taskPool.map!(to!double)(dupedLines);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto logs = taskPool.map!log10(nums);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        double sum = 0;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        foreach (elem; logs)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            sum += elem;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Any exceptions thrown while iterating over $(D source)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        or computing the map function are re-thrown on a call to $(D popFront) or,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        if thrown during construction, are simply allowed to propagate to the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        caller.  In the case of exceptions thrown while computing the map function,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the exceptions are chained as in $(D TaskPool.amap).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('map')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isInputRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
WHITE_SPACE (' ')
DLanguageTokenType.|| ('||')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.<= ('<=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Work unit size must be smaller than buffer size."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('adjoin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('unaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.final ('final')
WHITE_SPACE (' ')
DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Map')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// This is a class because the task needs to be located on the')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// heap and in the non-random access case source needs to be on')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// the heap, too.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.private ('private')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufferTrick')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('MapType')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastTaskWaited')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('S')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popSource')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('compiles')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('source')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('min')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('compiles')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('source')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('min')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"S must have slicing for Map."')
WHITE_SPACE ('\n')
WHITE_SPACE ('                                      ')
DLanguageTokenType.~ ('~')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"  "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('S')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stringof')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('" doesn't."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufferTrick')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Make sure we don't have the buffer recycling overload of')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// asyncBuf.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('source')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('isRoundRobin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('source')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot execute a parallel map on "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE ('\n')
WHITE_SPACE ('                                  ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"the buffer recycling overload of asyncBuf."')
WHITE_SPACE ('\n')
WHITE_SPACE ('                                 ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Just swap our input buffer with source's output buffer.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// No need to copy element by element.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dumpToFrom')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.<= ('<=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('swap')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// Just in case this source has been popped before')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// being sent to map:')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('from')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.-= ('-=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('from')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// The temporary array that data is copied to before being')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// mapped.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('FromType')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dumpToFrom')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('from')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.for ('for')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.++ ('++')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('front')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('from')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.public ('public')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('length')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufferTrick')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('bufSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('from')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('source')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// The from parameter is a dummy and ignored in the random access')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// case.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toMap')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('take')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('success')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popSource')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toMap')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dumpToFrom')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('min')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toMap')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// Handle as a special case:')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toMap')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
DLanguageTokenType.++ ('++')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toMap')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.in ('in')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE (' ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// Hack to reuse the task object.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('nextBufTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.) (')')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lastTaskWaited')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.LINE_COMMENT ('// Then the source is empty.  Signal it here.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('buf2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                            ')
DLanguageTokenType.ID ('from')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('bufPos')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('lastTaskWaited')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.public ('public')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.-- ('--')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufPos')
WHITE_SPACE (' ')
DLanguageTokenType.>= ('>=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isInfinite')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.LINE_COMMENT ('// popFront() sets this when source is empty')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Map')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Given a $(D source) range that is expensive to iterate over, returns an')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    input range that asynchronously buffers the contents of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D source) into a buffer of $(D bufSize) elements in a worker thread,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    while making previously buffered elements from a second buffer, also of size')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D bufSize), available via the range interface of the returned')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    object.  The returned range has a length iff $(D hasLength!S).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D asyncBuf) is useful, for example, when performing expensive operations')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    on the elements of ranges that represent data on a disk or network.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    import std.conv, std.stdio;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    void main()')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Fetch lines of a file in a background thread')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' while processing previously fetched lines,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' dealing with byLine's buffer recycling by')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' eagerly duplicating every line.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto lines = File("foo.txt").byLine();')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto duped = std.algorithm.map!"a.idup"(lines);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Fetch more lines in the background while we')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' process the lines already read into memory')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' into a matrix of doubles.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        double[][] matrix;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto asyncReader = taskPool.asyncBuf(duped);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        foreach (line; asyncReader)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            auto ls = line.split("\t");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            matrix ~= to!(double[])(ls);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Any exceptions thrown while iterating over $(D source) are re-thrown on a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    call to $(D popFront) or, if thrown during construction, simply')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    allowed to propagate to the caller.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isInputRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.final ('final')
WHITE_SPACE (' ')
DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AsyncBuf')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// This is a class because the task and source both need to be on')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// the heap.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// The element type of S.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// Needs to be here b/c of forward ref bugs.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.private ('private')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastTaskWaited')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Available if hasLength!S.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.public ('public')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('length')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('S')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('source')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.for ('for')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.++ ('++')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('front')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.in ('in')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE (' ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Hack to reuse the task object.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('nextBufTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.) (')')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('fillBuf')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lastTaskWaited')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// Then source is empty.  Signal it here.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('buf2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('buf1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextBufTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('bufPos')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('lastTaskWaited')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('submitBuf2')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.public ('public')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.-- ('--')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('bufPos')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufPos')
WHITE_SPACE (' ')
DLanguageTokenType.>= ('>=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('doBufSwap')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isInfinite')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('S')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('///')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// popFront() sets this when source is empty:')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AsyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('source')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Given a callable object $(D next) that writes to a user-provided buffer and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    a second callable object $(D empty) that determines whether more data is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    available to write via $(D next), returns an input range that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    asynchronously calls $(D next) with a set of size $(D nBuffers) of buffers')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    and makes the results available in the order they were obtained via the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    input range interface of the returned object.  Similarly to the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    input range overload of $(D asyncBuf), the first half of the buffers')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    are made available via the range interface while the second half are')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    filled and vice-versa.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Params:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    next = A callable object that takes a single argument that must be an array')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('           with mutable elements.  When called, $(D next) writes data to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('           the array provided by the caller.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    empty = A callable object that takes no arguments and returns a type')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            implicitly convertible to $(D bool).  This is used to signify')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            that no more data is available to be obtained by calling $(D next).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    initialBufSize = The initial size of each buffer.  If $(D next) takes its')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('                     array by reference, it may resize the buffers.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    nBuffers = The number of buffers to cycle through when calling $(D next).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Fetch lines of a file in a background')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' thread while processing previously fetched')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' lines, without duplicating any lines.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto file = File("foo.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    void next(ref char[] buf)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        file.readln(buf);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Fetch more lines in the background while we')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' process the lines already read into memory')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' into a matrix of doubles.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    double[][] matrix;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto asyncReader = taskPool.asyncBuf(&next, &file.eof);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    foreach (line; asyncReader)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto ls = line.split("\t");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        matrix ~= to!(double[])(ls);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Any exceptions thrown while iterating over $(D range) are re-thrown on a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    call to $(D popFront).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Warning:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Using the range returned by this function in a parallel foreach loop')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    will not work because buffers may be overwritten while the task that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    processes them is in queue.  This is checked for at compile time')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    and will result in a static assertion failure.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('next')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialBufSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuffers')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('C1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('isArray')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('C1')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('roundRobin')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RoundRobinBuffer')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('next')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialBufSize')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuffers')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('roundRobin')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuffers')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('///')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Parallel reduce on a random access range.  Except as otherwise noted,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        usage is similar to $(REF _reduce, std,algorithm,iteration).  This')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        function works by splitting the range to be reduced into work units,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        which are slices to be reduced in parallel.  Once the results from all')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        work units are computed, a final serial reduction is performed on these')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        results to compute the final answer. Therefore, care must be taken to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        choose the seed value appropriately.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Because the reduction is being performed in parallel, $(D functions)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        must be associative.  For notational simplicity, let # be an')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        infix operator representing $(D functions).  Then, (a # b) # c must equal')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        a # (b # c).  Floating point addition is not associative')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        even though addition in exact arithmetic is.  Summing floating')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        point numbers using this function may give different results than summing')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        serially.  However, for many practical purposes floating point addition')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        can be treated as associative.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Note that, since $(D functions) are assumed to be associative,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        additional optimizations are made to the serial portion of the reduction')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        algorithm. These take advantage of the instruction level parallelism of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        modern CPUs, in addition to the thread-level parallelism that the rest')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        of this module exploits.  This can lead to better than linear speedups')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        relative to $(REF _reduce, std,algorithm,iteration), especially for')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        fine-grained benchmarks like dot products.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        An explicit seed may be provided as the first argument.  If')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        provided, it is used as the seed for all work units and for the final')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        reduction of results from all work units.  Therefore, if it is not the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        identity value for the operation being performed, results may differ')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        from those generated by $(REF _reduce, std,algorithm,iteration) or')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        depending on how many work units are used.  The next argument must be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the range to be reduced.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find the sum of squares of a range in parallel, using')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' an explicit seed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Timings on an Athlon 64 X2 dual core machine:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Parallel reduce:                     72 milliseconds')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Using std.algorithm.reduce instead:  181 milliseconds')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto nums = iota(10_000_000.0f);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto sumSquares = taskPool.reduce!"a + b"(')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            0.0, std.algorithm.map!"a ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' a"(nums)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        );')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        If no explicit seed is provided, the first element of each work unit')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        is used as a seed.  For the final reduction, the result from the first')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        work unit is used as the seed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find the sum of a range in parallel, using the first')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' element of each work unit as the seed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto sum = taskPool.reduce!"a + b"(nums);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        An explicit work unit size may be specified as the last argument.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Specifying too small a work unit size will effectively serialize the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        reduction, as the final reduction of the result of each work unit will')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        dominate computation time.  If $(D TaskPool.size) for this instance')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        is zero, this parameter is ignored and one work unit is used.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Use a work unit size of 100.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto sum2 = taskPool.reduce!"a + b"(nums, 100);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Work unit size of 100 and explicit seed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto sum3 = taskPool.reduce!"a + b"(0.0, nums, 100);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Parallel reduce supports multiple functions, like')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(D std.algorithm.reduce).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find both the min and max of nums.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto minMax = taskPool.reduce!(min, max)(nums);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        assert(minMax[0] == reduce!min(nums));')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        assert(minMax[1] == reduce!max(nums));')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        $(B Exception Handling):')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        After this function is finished executing, any exceptions thrown')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        are chained together via $(D Throwable.next) and rethrown.  The chaining')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        order is non-deterministic.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceAdjoin')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('finishFun')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceFinish')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isIntegral')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('makeStartValue')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Type')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Type')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('adjoin')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('staticMap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('binaryFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('functions')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('Types')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('emplaceRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('expand')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isInputRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('explicitSeed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('args2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultWorkUnitSize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot reduce an empty range with first element as start value."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('makeStartValue')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('front')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('explicitSeed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceOnRange')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('upperBound')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// This is for exploiting instruction level parallelism by')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// using multiple accumulator variables within each thread,')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// since we're assuming functions are associative anyhow.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// This is so that loops can be unrolled automatically.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ilpTuple')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('AliasSeq')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nILP')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ilpTuple')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('upperBound')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nILP')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.<= ('<=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.LINE_COMMENT ('// Handle as a special case.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('explicitSeed')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('makeStartValue')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('upperBound')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('result')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('nILP')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('nILP')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ilpTuple')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lowerBound')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('explicitSeed')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('makeStartValue')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nLoop')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('explicitSeed')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nLoop')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('j')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ilpTuple')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.ID ('offsets')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Finish the remainder.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nILP')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('subSize')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lowerBound')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('upperBound')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ilpTuple')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('finishFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('results')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('finishFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('seed')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceOnRange')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Unlike the rest of the functions here, I can't use the Task object')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// recycling trick here because this has to work on non-commutative')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// operations.  After all the tasks are done executing, fun() has to')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// be applied on the results of these to get a final result, but')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// it can't be evaluated out of order.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nWorkUnits')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
WHITE_SPACE (' ')
DLanguageTokenType.% ('%')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nWorkUnits')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
WHITE_SPACE (' ')
DLanguageTokenType.>= ('>=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('len')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('run')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('reduceOnRange')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('R')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('RTask')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Can't use alloca() due to Bug 3753.  Use a fixed buffer')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// backed by malloc().')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('maxStack')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2_048')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.byte ('byte')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('maxStack')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBytesNeeded')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nWorkUnits')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdc')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdlib')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('malloc')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('free')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nBytesNeeded')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('maxStack')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tasks')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('RTask')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nWorkUnits')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ptr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('RTask')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('malloc')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nBytesNeeded')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('OutOfMemoryError')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                        ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Out of memory in std.parallelism."')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tasks')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nWorkUnits')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nBytesNeeded')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('maxStack')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('free')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('emplaceRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Hack to take the address of a nested function w/o')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// making a closure.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedAddress')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('D')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.scope ('scope')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('D')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('del')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('system')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tmp')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('del')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tmp')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('curPos')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('useTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RTask')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedAddress')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('reduceOnRange')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('min')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('len')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('curPos')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// upper bound.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.; (';')
WHITE_SPACE ('  ')
DLanguageTokenType.LINE_COMMENT ('// range')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('_args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('curPos')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.LINE_COMMENT ('// lower bound.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('curPos')
WHITE_SPACE (' ')
DLanguageTokenType.+= ('+=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('useTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('abstractPutGroupNoSync')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('job')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Try to execute each of these in the current thread')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Now that we've tried to execute every task, they're all either')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// done or in progress.  Force all of them.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('seed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('addToChain')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('finishFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('result')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('returnVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Gets the index of the current thread relative to this $(D TaskPool).  Any')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    thread not in this pool will receive an index of 0.  The worker threads in')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    this pool receive unique indices of 1 through $(D this.size).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    This function is useful for maintaining worker-local resources.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Execute a loop that computes the greatest common')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' divisor of every number from 0 through 999 with')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' 42 in parallel.  Write the results out to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' a set of files, one for each thread.  This allows')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' results to be written out without any synchronization.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    import std.conv, std.range, std.numeric, std.stdio;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    void main()')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        auto filesHandles = new File[taskPool.size + 1];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        scope(exit) {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            foreach (ref handle; fileHandles)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('                handle.close();')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        foreach (i, ref handle; fileHandles)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            handle = File("workerResults" ~ to!string(i) ~ ".txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        foreach (num; parallel(iota(1_000)))')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            auto outHandle = fileHandles[taskPool.workerIndex];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('            outHandle.writeln(num, '\t', gcd(num, 42));')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rawInd')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('threadIndex')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('rawInd')
WHITE_SPACE (' ')
DLanguageTokenType.>= ('>=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('instanceStartIndex')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rawInd')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('instanceStartIndex')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('rawInd')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('instanceStartIndex')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Struct for creating worker-local storage.  Worker-local storage is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    thread-local storage that exists only for worker threads in a given')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D TaskPool) plus a single thread outside the pool.  It is allocated on the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    garbage collected heap in a way that avoids _false sharing, and doesn't')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    necessarily have global scope within any thread.  It can be accessed from')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    any worker thread in the $(D TaskPool) that created it, and one thread')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    outside this $(D TaskPool).  All threads outside the pool that created a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    given instance of worker-local storage share a single slot.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Since the underlying data for this struct is heap-allocated, this struct')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    has reference semantics when passed between functions.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The main uses cases for $(D WorkerLocalStorageStorage) are:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    1.  Performing parallel reductions with an imperative, as opposed to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    functional, programming style.  In this case, it's useful to treat')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D WorkerLocalStorageStorage) as local to each thread for only the parallel')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    portion of an algorithm.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    2.  Recycling temporary buffers across iterations of a parallel foreach loop.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Calculate pi as in our synopsis example, but')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' use an imperative instead of a functional style.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    immutable n = 1_000_000_000;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    immutable delta = 1.0L ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' n;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto sums = taskPool.workerLocalStorage(0.0L);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    foreach (i; parallel(iota(n)))')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        immutable x = ( i - 0.5L ) ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' delta;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        immutable toAdd = delta ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' ( 1.0 + x ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' x );')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        sums.get += toAdd;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Add up the results from each worker thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    real pi = 0;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    foreach (threadResult; sums.toRange)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    {')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        pi += 4.0L ')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT (' threadResult;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    }')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('WorkerLocalStorage')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elemSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.bool ('bool')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('stillThreadLocal')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('roundToLine')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('num')
WHITE_SPACE (' ')
DLanguageTokenType.% ('%')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cacheLineSize')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('num')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cacheLineSize')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('cacheLineSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('data')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialize')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stillThreadLocal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('stillThreadLocal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Determines whether the GC should scan the array.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('blkInfo')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeid ('typeid')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('flags')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE ('\n')
WHITE_SPACE ('                           ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('GC')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('BlkAttr')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('                           ')
DLanguageTokenType.ID ('GC')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('BlkAttr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('NO_SCAN')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nElem')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('elemSize')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('roundToLine')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// The + 3 is to pad one full cache line worth of space on either side')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// of the data structure to make sure false sharing with completely')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// unrelated heap data is prevented, and to provide enough padding to')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// make sure that data is cache line-aligned.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('GC')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('malloc')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elemSize')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nElem')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('blkInfo')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elemSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Cache line align data ptr.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('roundToLine')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('data')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nElem')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('opIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.CHARACTER_LITERAL (''\t'')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elemSize')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opIndexAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.* ('*')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elemSize')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.public ('public')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Get the current thread's instance.  Returns by ref.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Note that calling $(D get) from any thread')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        outside the $(D TaskPool) that created this instance will return the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        same reference, so an instance of worker-local storage should only be')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        accessed from one thread outside the pool that created it.  If this')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        rule is violated, undefined behavior will result.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        If assertions are enabled and $(D toRange) has been called, then this')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        WorkerLocalStorage instance is no longer worker-local and an assertion')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        failure will result when calling this method.  This is not checked')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        when assertions are disabled for performance reasons.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('get')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('stillThreadLocal')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot call get() on this instance of WorkerLocalStorage "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"because it is no longer worker-local."')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerIndex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Assign a value to the current thread's instance.  This function has')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        the same caveats as its overload.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('get')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('stillThreadLocal')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot call get() on this instance of WorkerLocalStorage "')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"because it is no longer worker-local."')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('opIndexAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('val')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerIndex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Returns a range view of the values for all threads, which can be used')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        to further process the results of each thread after running the parallel')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        part of your algorithm.  Do not use this method in the parallel portion')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        of your algorithm.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        Calling this function sets a flag indicating that this struct is no')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        longer worker-local, and attempting to use the $(D get) method again')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('        will result in an assertion failure if assertions are enabled.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('         ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('WorkerLocalStorageRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toRange')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('stillThreadLocal')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('stillThreadLocal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Make absolutely sure results are visible to all threads.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// This is probably not necessary since some other')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// synchronization primitive will be used to signal that the')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// parallel part of the algorithm is done, but the')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// performance impact should be negligible, so it's better')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// to be safe.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('barrierDummy')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('barrierDummy')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('WorkerLocalStorageRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Range primitives for worker-local storage.  The purpose of this is to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    access results produced by each worker thread from a single thread once you')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    are no longer using the worker-local storage from multiple threads.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Do not use this struct in the parallel portion of your algorithm.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The proper way to instantiate this object is to call')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D WorkerLocalStorage.toRange).  Once instantiated, this object behaves')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    as a finite random-access range with assignable, lvalue elements and')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    a length equal to the number of worker threads in the $(D TaskPool) that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    created it plus 1.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('WorkerLocalStorageRange')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.private ('private')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('WorkerLocalStorage')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('beginOffset')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('WorkerLocalStorage')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerLocalStorage')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.public ('public')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('back')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('beginOffset')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.-- ('--')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popBack')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.-- ('--')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('save')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('beginOffset')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opIndexAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('val')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opSlice')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lower')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('upper')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('upper')
WHITE_SPACE (' ')
DLanguageTokenType.<= ('<=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newWl')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('newWl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.+= ('+=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lower')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newWl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('elemSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('newWl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('upper')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lower')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('newWl')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('length')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Creates an instance of worker-local storage, initialized with a given')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    value.  The value is $(D lazy) so that you can, for example, easily')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    create one instance of a class for each worker.  For usage example,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    see the $(D WorkerLocalStorage) struct.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('WorkerLocalStorage')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.lazy ('lazy')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialVal')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('WorkerLocalStorage')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('initialize')
DLanguageTokenType.( ('(')
DLanguageTokenType.this ('this')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialVal')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Memory barrier to make absolutely sure that what we wrote is')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// visible to worker threads.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ubyte ('ubyte')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('barrierDummy')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('barrierDummy')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ret')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Signals to all worker threads to terminate as soon as they are finished')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    with their current $(D Task), or immediately if they are not executing a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D Task).  $(D Task)s that were in queue will not be executed unless')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    a call to $(D Task.workForce), $(D Task.yieldForce) or $(D Task.spinForce)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    causes them to be executed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Use only if you have waited on every $(D Task) and therefore know the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    queue is empty, or if you speculatively executed some tasks and no longer')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    need the results.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('atomicSetUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stopNow')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Signals worker threads to terminate when the queue becomes empty.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If blocking argument is true, wait for all worker threads to terminate')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    before returning.  This option might be used in applications where')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    task results are never consumed-- e.g. when $(D TaskPool) is employed as a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    rudimentary scheduler for tasks which communicate by means other than')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    return values.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Warning:  Calling this function with $(D blocking = true) from a worker')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('              thread that is a member of the same $(D TaskPool) that')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('              $(D finish) is being called on will result in a deadlock.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('     ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('finish')
DLanguageTokenType.( ('(')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('blocking')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('atomicCasUbyte')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('status')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('running')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('finishing')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('notifyAll')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('blocking')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Use this thread as a worker until everything is finished.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('executeWorkLoop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Maybe there should be something here to prevent a thread')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// from calling join() on itself if this function is called')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// from a worker thread in the same pool, but:')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('//')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// 1.  Using an if statement to skip join() would result in')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('//     finish() returning without all tasks being finished.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('//')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// 2.  If an exception were thrown, it would bubble up to the')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('//     Task from which finish() was called and likely be')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('//     swallowed.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('join')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Returns the number of worker threads in the pool.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Put a $(D Task) object on the back of the task queue.  The $(D Task)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    object may be passed by pointer or reference.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    import std.file;')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Create a task.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    auto t = task!read("foo.txt");')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Add it to the queue to be executed.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    taskPool.put(t);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Notes:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    @trusted overloads of this function are called for $(D Task)s if')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(REF hasUnsharedAliasing, std,traits) is false for the $(D Task)'s')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    return type or the function the $(D Task) executes is $(D pure).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D Task) objects that meet all other requirements specified in the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D @trusted) overloads of $(D task) and $(D scopedTask) may be created')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    and executed from $(D @safe) code via $(D Task.executeInNewThread) but')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    not via $(D TaskPool).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    While this function takes the address of variables that may')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    be on the stack, some overloads are marked as @trusted.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D Task) includes a destructor that waits for the task to complete')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    before destroying the stack frame it is allocated on.  Therefore,')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    it is impossible for the stack frame to be destroyed before the task is')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    complete and no longer referenced by a $(D TaskPool).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeReturn')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('abstractPut')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('isSafeReturn')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot put a null Task on a TaskPool queue."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSafeReturn')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('abstractPut')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.... ('...')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('fun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Args')
DLanguageTokenType.) (')')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('isSafeReturn')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('enforce')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
WHITE_SPACE (' ')
DLanguageTokenType.! ('!')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot put a null Task on a TaskPool queue."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('task')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    These properties control whether the worker threads are daemon threads.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    A daemon thread is automatically terminated when all non-daemon threads')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    have terminated.  A non-daemon thread will prevent a program from')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    terminating as long as it has not terminated.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    If any $(D TaskPool) with non-daemon threads is active, either $(D stop)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    or $(D finish) must be called on it before the program can terminate.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    The worker treads in the $(D TaskPool) instance returned by the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D taskPool) property are daemon by default.  The worker threads of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    manually instantiated task pools are non-daemon by default.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Note:  For a size zero pool, the getter arbitrarily returns true and the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('           setter has no effect.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isDaemon')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isDaemon')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isDaemon')
DLanguageTokenType.( ('(')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isDaemon')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    These functions allow getting and setting the OS scheduling priority of')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    the worker threads in this $(D TaskPool).  They forward to')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    $(D core.thread.Thread.priority), so a given priority value here means the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    same thing as an identical priority value in $(D core.thread).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    Note:  For a size zero pool, the getter arbitrarily returns')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('           $(D core.thread.Thread.PRIORITY_MIN) and the setter has no effect.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    ')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.? ('?')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MIN')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newPriority')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newPriority')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Returns a lazily initialized global instantiation of $(D TaskPool).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('This function can safely be called concurrently from multiple non-worker')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('threads.  The worker threads in this pool are daemon threads, meaning that it')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('is not necessary to call $(D TaskPool.stop) or $(D TaskPool.finish) before')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('terminating the main thread.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('concurrency')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initOnce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.__gshared ('__gshared')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initOnce')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.( ('(')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('p')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('defaultPoolThreads')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('p')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('isDaemon')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('p')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_defaultPoolThreads')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.shared ('shared')
WHITE_SPACE (' ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('atomicStore')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_defaultPoolThreads')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('These properties get and set the number of worker threads in the $(D TaskPool)')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('instance returned by $(D taskPool).  The default value is $(D totalCPUs) - 1.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Calling the setter after the first call to $(D taskPool) does not changes')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('number of worker threads in the instance returned by $(D taskPool).')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultPoolThreads')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('atomicLoad')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_defaultPoolThreads')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('defaultPoolThreads')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('trusted')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('atomicStore')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('_defaultPoolThreads')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('newVal')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Convenience functions that forwards to $(D taskPool.parallel).  The')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('purpose of these is to make parallel foreach less verbose and more')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('readable.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('Example:')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' Find the logarithm of every number from')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' 1 to 1_000_000 in parallel, using the')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT ('/')
DLanguageTokenType.BLOCK_COMMENT (' default TaskPool instance.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('auto logs = new double[1_000_000];')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('foreach (i, ref elem; parallel(logs))')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('{')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('    elem = log(i + 1.0);')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('}')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('---')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('/// Ditto')
WHITE_SPACE ('\n')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Thrown when a parallel foreach loop is broken from.')
WHITE_SPACE ('\n')
DLanguageTokenType.class ('class')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelForeachError')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Error')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.super ('super')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Cannot break from a parallel foreach loop using break, return, "')
WHITE_SPACE ('\n')
WHITE_SPACE ('              ')
DLanguageTokenType.~ ('~')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"labeled break/continue or goto statements."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('------Structs that implement opApply for parallel foreach.------------------')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.template ('template')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('randLen')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('randLen')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('isRandomAccessRange')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('hasLength')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('submitAndExecute')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.scope ('scope')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doIt')
WHITE_SPACE ('\n')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nThreads')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('doIt')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdc')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdlib')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('malloc')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('free')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdc')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('memcpy')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The logical thing to do would be to just use alloca() here, but that')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// causes problems on Windows for reasons that I don't understand')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// (tentatively a compiler bug) and definitely doesn't work on Posix due')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// to Bug 3753.  Therefore, allocate a fixed buffer and fall back to')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// malloc() if someone's using a ridiculous amount of threads.  Also,')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// the using a byte array instead of a PTask array as the fixed buffer')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// is to prevent d'tors from being called on uninitialized excess PTask')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// instances.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('64')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.byte ('byte')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('nBuf')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nThreads')
WHITE_SPACE (' ')
DLanguageTokenType.<= ('<=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuf')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tasks')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nThreads')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ptr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('malloc')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nThreads')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('OutOfMemoryError')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Out of memory in std.parallelism."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tasks')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('nThreads')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nThreads')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuf')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('free')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('ptr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('core')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdc')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('memcpy')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// This silly looking code is necessary to prevent d'tors from being')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// called on uninitialized objects.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('temp')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('doIt')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('memcpy')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('t')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('temp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('PTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sizeof')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// This has to be done to t after copying, not temp before copying.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Otherwise, temp's destructor will sit here and wait for the')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// task to finish.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('prev')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('queueLock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('queueUnlock')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('abstractPutGroupNoSync')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.$ ('$')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('job')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('exception')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('taskStatus')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskStatus')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Try to execute each of these in the current thread')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.$ ('$')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('tryDeleteExecute')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('basePtr')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.try ('try')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.catch ('catch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('addToChain')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('foreachErr')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelForeachError')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('doSizeZeroCase')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Delegate')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('p')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Delegate')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.with ('with')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('p')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('res')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// The explicit ElementType!R in the foreach loops is necessary for')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// correct behavior when iterating over strings.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLvalueElements')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('res')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('res')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('res')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('foreachErr')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('res')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('res')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('res')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('foreachErr')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('res')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelApplyMixinRandomAccess')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.TOKEN_STRING ('q{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('H')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('Z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('W')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('2')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('-')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING (':')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('L')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('O')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('*')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('>')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('A')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelApplyMixinInputRange')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.TOKEN_STRING ('q{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('H')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('Z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('W')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('2')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('B')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (''')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('B')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('~')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('B')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('"')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('L')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('*')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (':')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (':')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('O')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('A')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('<')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('F')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('O')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (':')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('A')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('<')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('U')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('F')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('z')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('M')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('j')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('1')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('F')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING ('/')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('$')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('_')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('-')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('-')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('B')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('P')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('L')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('=')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('T')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('y')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('S')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('C')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('k')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('.')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING ('+')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('L')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('!')
DLanguageTokenType.TOKEN_STRING ('R')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('*')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('*')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('w')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('v')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('{')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('g')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('[')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING (']')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('f')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('a')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('h')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('s')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('b')
DLanguageTokenType.TOKEN_STRING ('m')
DLanguageTokenType.TOKEN_STRING ('i')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('A')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('E')
DLanguageTokenType.TOKEN_STRING ('x')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('c')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('(')
DLanguageTokenType.TOKEN_STRING ('p')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('l')
DLanguageTokenType.TOKEN_STRING (',')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('&')
DLanguageTokenType.TOKEN_STRING ('d')
DLanguageTokenType.TOKEN_STRING ('o')
DLanguageTokenType.TOKEN_STRING ('I')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING (')')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('e')
DLanguageTokenType.TOKEN_STRING ('t')
DLanguageTokenType.TOKEN_STRING ('u')
DLanguageTokenType.TOKEN_STRING ('r')
DLanguageTokenType.TOKEN_STRING ('n')
DLanguageTokenType.TOKEN_STRING (' ')
DLanguageTokenType.TOKEN_STRING ('0')
DLanguageTokenType.TOKEN_STRING (';')
DLanguageTokenType.TOKEN_STRING ('\n')
DLanguageTokenType.TOKEN_STRING ('}')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Calls e.next until the end of the chain is found.')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('findLastException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
WHITE_SPACE (' ')
DLanguageTokenType.is ('is')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.null ('null')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.while ('while')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('e')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// Adds e to the exception chain.')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addToChain')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Throwable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lastException')
WHITE_SPACE ('\n')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('firstException')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('lastException')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('next')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('lastException')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('findLastException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('firstException')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('e')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('lastException')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('findLastException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('e')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ParallelForeach')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('R')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workUnitSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ElementType')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('hasLvalueElements')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('NoIndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('IndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('NoIndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('E')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('IndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.delegate ('delegate')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('E')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opApply')
DLanguageTokenType.( ('(')
DLanguageTokenType.scope ('scope')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('NoIndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('randLen')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.mixin ('mixin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelApplyMixinRandomAccess')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.mixin ('mixin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelApplyMixinInputRange')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opApply')
DLanguageTokenType.( ('(')
DLanguageTokenType.scope ('scope')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('IndexDg')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('dg')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('randLen')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('R')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.mixin ('mixin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelApplyMixinRandomAccess')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.else ('else')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.mixin ('mixin')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelApplyMixinInputRange')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.BLOCK_COMMENT ('/*')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('This struct buffers the output of a callable that outputs data into a')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('user-supplied buffer into a set of buffers of some fixed size.  It allows these')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('buffers to be accessed with an input range interface.  This is used internally')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('in the buffer-recycling overload of TaskPool.asyncBuf, which creates an')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('instance and forwards it to the input range overload of asyncBuf.')
DLanguageTokenType.BLOCK_COMMENT ('\n')
DLanguageTokenType.BLOCK_COMMENT ('*/')
WHITE_SPACE ('\n')
DLanguageTokenType.private ('private')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RoundRobinBuffer')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('C2')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// No need for constraints because they're already checked for in asyncBuf.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Array')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Parameters')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('C1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.alias ('alias')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Array')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('index')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('C1')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextDel')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('C2')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('emptyDel')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_empty')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('primed')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('C1')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextDel')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('C2')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('emptyDel')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialBufSize')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuffers')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('nextDel')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nextDel')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('emptyDel')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('emptyDel')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nBuffers')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('initialBufSize')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('prime')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.in ('in')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('success')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('primed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('nextDel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('T')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.in ('in')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.body ('body')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('primed')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('prime')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('index')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.|| ('||')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('emptyDel')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('_empty')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.true ('true')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('index')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.% ('%')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufs')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('primed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.nothrow ('nothrow')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('_empty')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.unittest ('unittest')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// This was the only way I could get nested maps to work.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.__gshared ('__gshared')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdio')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// These test basic functionality but don't stress test for threading bugs.')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// These are the tests that should be run every time Phobos is compiled.')
WHITE_SPACE ('\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The only way this can be verified is manually.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.debug ('debug')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('std_parallelism')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"totalCPUs = "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('totalCPUs')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('oldPriority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MAX')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MAX')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MIN')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MIN')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('oldPriority')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('priority')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('oldPriority')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test task().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('t2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test scopedTask().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('st')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('st')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('st2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('st2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test executeInNewThread().')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ct')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('refFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('x')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ct')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('executeInNewThread')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PRIORITY_MAX')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('ct')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ct')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test ref return.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toInc')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('makeRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('T')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('T')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t3')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('makeRef')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toInc')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t3')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('t3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('spinForce')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('args')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('testSafe')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('safe')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bump')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('safePool')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('t')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('bump')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('t')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('st')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('bump')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('st')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('safePool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('arr')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('nums2')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums2')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums2')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('arr')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test const/immutable arguments.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('add')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lhs')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('rhs')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addLhs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addRhs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('add')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addLhs')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addRhs')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addScopedTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('scopedTask')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('add')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addLhs')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('addRhs')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('addTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('addScopedTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('addTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('addScopedTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test parallel foreach with non-random access range.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('range')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('filter')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a != 666"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('range')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('logs')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.double ('double')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('logs')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('elem')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('log')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('logs')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.double ('double')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('log')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('16')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('25')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.long ('long')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('16')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('25')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"-a"')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE ('\n')
WHITE_SPACE ('           ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tupleBuf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Tuple')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"-a"')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tupleBuf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tupleBuf')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"-a"')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tupleBuf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tupleBuf')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test amap with a non-array buffer.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('toIndex')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('indexed')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('range')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toIndex')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * 2"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('8')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toIndex')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('8')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a / 2"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('indexed')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('toIndex')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('16')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('25')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('16')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('25')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.FLOAT_LITERAL ('0.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.FLOAT_LITERAL ('0.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('min')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('max')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * b"')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE ('\n')
WHITE_SPACE ('           ')
DLanguageTokenType.ID ('tuple')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('24')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('serialAns')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('serialAns')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('serialAns')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test worker-local storage.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('get')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('get')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wlRange')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wl')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('toRange')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelSum')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('wlRange')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelSum')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('499500')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('wlRange')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wlRange')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('wlRange')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType... ('..')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('wlRange')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test finish()')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('slowFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('sleep')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('dur')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"msecs"')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool1')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tSlow')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('slowFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tSlow')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool1')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('finish')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('tSlow')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('yieldForce')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Can't assert that pool1.status == PoolState.stopNow because status')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// doesn't change until after the "done" flag is set and the waiting')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// thread is woken up.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tSlow2')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('slowFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tSlow2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('finish')
DLanguageTokenType.( ('(')
DLanguageTokenType.true ('true')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.LINE_COMMENT ('// blocking')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tSlow2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// Test fix for Bug 8582 by making pool size zero.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pool3')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('tSlow3')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('slowFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tSlow3')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('pool3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('finish')
DLanguageTokenType.( ('(')
DLanguageTokenType.true ('true')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.LINE_COMMENT ('// blocking')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('tSlow3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('done')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// This is correct because no thread will terminate unless pool2.status')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.LINE_COMMENT ('// and pool3.status have already been set to stopNow.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pool2')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stopNow')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('pool3')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('status')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('PoolState')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stopNow')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test default pool stuff.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('totalCPUs')
WHITE_SPACE (' ')
DLanguageTokenType.- ('-')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('30_000_001')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10_000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('30_000_001')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('           ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// The filter is to kill random access and test the non-random access')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// branch.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                   ')
DLanguageTokenType.ID ('filter')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a == a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('30_000_001')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                                  ')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10_000')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('30_000_001')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('           ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0UL')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                       ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3_000_001')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10_000')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                      ')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0UL')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('                       ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('algorithm')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3_000_001')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                      ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1_000_002')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('               ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('filter')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a == a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1_000_002')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('           ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('file')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('deleteme')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('temp_file')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('deleteme')
WHITE_SPACE (' ')
DLanguageTokenType.~ ('~')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"-tempDelMe.txt"')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('file')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('File')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('temp_file')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"wb"')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.scope ('scope')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('exit')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('file')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('close')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('file')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('remove')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('temp_file')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('written')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.[ ('[')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.FLOAT_LITERAL ('4.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.FLOAT_LITERAL ('7.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('8')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('9')
DLanguageTokenType.] (']')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('row')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('written')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('file')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('join')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('to')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('string')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('row')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"\t"')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('file')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('File')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('temp_file')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('next')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.char ('char')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('file')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('readln')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.: (':')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('chomp')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('buf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('chomp')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('buf')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.double ('double')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('read')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('asyncReader')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('next')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('file')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('eof')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('line')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('asyncReader')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('line')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ls')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('line')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('split')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"\t"')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('read')
WHITE_SPACE (' ')
DLanguageTokenType.~= ('~=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('to')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.double ('double')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ls')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('read')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('written')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('file')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('close')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test Map/AsyncBuf chaining.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('abuf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.- ('-')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3_000_000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('temp')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('sqrt')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('abuf')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('lmchain')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('temp')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('lmchain')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ii')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('lmchain')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ii')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ii')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.CHARACTER_LITERAL (''\t'')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('ii')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test buffer trick in parallel foreach.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('abuf')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.- ('-')
DLanguageTokenType.FLOAT_LITERAL ('1.0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('abuf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufTrickTest')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('size_t')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('abuf')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('abuf')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('bufTrickTest')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('equal')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('bufTrickTest')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('math')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('abs')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('spinForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test that worker local storage from one pool receives an index of 0')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// when the index is queried w.r.t. another pool.  The only way to do this')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// is non-deterministically.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerIndex')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerIndex')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// Test exception handling.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelForeachThrow')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('""')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('assertThrown')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelForeachThrow')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduceException')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('a')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('b')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('""')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('assertThrown')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('reduceException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mapException')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('a')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('""')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('assertThrown')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('mapException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mapThrow')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('m')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('map')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('mapException')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('m')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('assertThrown')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('mapThrow')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('ThrowingRange')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.@ ('@')
DLanguageTokenType.ID ('property')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('""')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.enum ('enum')
WHITE_SPACE (' ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('assertThrown')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('asyncBuf')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('ThrowingRange')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('init')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('//version = parallelismStressTest;')
WHITE_SPACE ('\n\n')
DLanguageTokenType.LINE_COMMENT ('// These are more like stress tests than real unit tests.  They print out')
WHITE_SPACE ('\n')
DLanguageTokenType.LINE_COMMENT ('// tons of stuff and should not be run every time make unittest is run.')
WHITE_SPACE ('\n')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('parallelismStressTest')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('size_t')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('attempt')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.for ('for')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('attempt')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('attempt')
DLanguageTokenType.++ ('++')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolSize')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('numbers')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1_000')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Make sure it works.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Done creating nums."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myNumbers')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('filter')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a % 7 > 0"')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('num')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myNumbers')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('num')
WHITE_SPACE (' ')
DLanguageTokenType.% ('%')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('7')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
WHITE_SPACE (' ')
DLanguageTokenType.&& ('&&')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
WHITE_SPACE (' ')
DLanguageTokenType.< ('<')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Done modulus test."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('squares')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a * a"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('squares')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('squares')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Done squares."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sumFuture')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.! ('!')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('sumFuture')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ulong ('ulong')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sumSquares')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('sumSquares')
WHITE_SPACE (' ')
DLanguageTokenType.+= ('+=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.uint ('uint')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mySum')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sumFuture')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('spinForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('mySum')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('999')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1000')
WHITE_SPACE (' ')
DLanguageTokenType./ ('/')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mySumParallel')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('numbers')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('mySum')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mySumParallel')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Done sums."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('myTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.synchronized ('synchronized')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Our lives are parallel...Our lives are parallel."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('myTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nestedOuter')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"abcd"')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nestedInner')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE ('  ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('letter')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nestedOuter')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('j')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nestedInner')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.synchronized ('synchronized')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('": "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('letter')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"  "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('j')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('": "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('        ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('attempt')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Press enter to go to next round of unittests."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('readln')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// These unittests are intended more for actual testing and not so much')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// as examples.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('attempt')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.INTEGER_LITERAL ('10')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolSize')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.] (']')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('TaskPool')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolSize')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Test indexing.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Creator Raw Index:  "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('threadIndex')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerIndex')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Test worker-local storage.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('workerLocalStorage')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.! ('!')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0U')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('get')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('workerLocalStorage')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('toRange')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.+ ('+')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Make sure work is reasonably balanced among threads.  This test is')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// non-deterministic and is more of a sanity check than something that')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// has an absolute pass/fail.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.shared ('shared')
DLanguageTokenType.( ('(')
DLanguageTokenType.uint ('uint')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nJobsByThread')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('pool')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('nJobsByThread')
DLanguageTokenType.[ ('[')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('thread')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('nJobsByThread')
DLanguageTokenType.[ ('[')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('getThis')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.) (')')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('atomicOp')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"+="')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nJobsByThread')
DLanguageTokenType.[ ('[')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('getThis')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"\nCurrent thread is:  "')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.void ('void')
DLanguageTokenType.* ('*')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Thread')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('getThis')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Workload distribution:  "')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('k')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('v')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nJobsByThread')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('k')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.CHARACTER_LITERAL (''\t'')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('v')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Test whether amap can be nested.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('matrix')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('matrix')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('j')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('matrix')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.] (']')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('length')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('matrix')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('j')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Get around weird bugs having to do w/ sqrt being an intrinsic:')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.real ('real')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('mySqrt')
DLanguageTokenType.( ('(')
DLanguageTokenType.real ('real')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sqrt')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('num')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelSqrt')
DLanguageTokenType.( ('(')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('mySqrt')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sqrtMatrix')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('parallelSqrt')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('matrix')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('row')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sqrtMatrix')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('j')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('row')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.real ('real')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('shouldBe')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sqrt')
DLanguageTokenType.( ('(')
WHITE_SPACE (' ')
DLanguageTokenType.cast ('cast')
DLanguageTokenType.( ('(')
DLanguageTokenType.real ('real')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('j')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('shouldBe')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('sqrtMatrix')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('i')
DLanguageTokenType.] (']')
DLanguageTokenType.[ ('[')
DLanguageTokenType.ID ('j')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('shouldBe')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('saySuccess')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Success doing matrix stuff that involves nested pool use."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('saySuccess')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('saySuccess')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// A more thorough test of amap, reduce:  Find the sum of the square roots of')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// matrix.')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.real ('real')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('parallelSum')
DLanguageTokenType.( ('(')
DLanguageTokenType.real ('real')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('input')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('input')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('sumSqrt')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('reduce')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a + b"')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                               ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('parallelSum')
DLanguageTokenType.( ('(')
WHITE_SPACE ('\n')
WHITE_SPACE ('                                   ')
DLanguageTokenType.ID ('sqrtMatrix')
WHITE_SPACE ('\n')
WHITE_SPACE ('                               ')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                           ')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('approxEqual')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('sumSqrt')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('4.437e8')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Done sum of square roots."')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Test whether tasks work with function pointers.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nanTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('isNaN')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.FLOAT_LITERAL ('1.0L')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nanTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nanTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('spinForce')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.false ('false')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.if ('if')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('size')
WHITE_SPACE (' ')
DLanguageTokenType.> ('>')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.LINE_COMMENT ('// Test work waiting.')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessFun')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType... ('..')
DLanguageTokenType.INTEGER_LITERAL ('1_000_000')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTasks')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('uselessFun')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1000')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTask')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('uselessTask')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('task')
DLanguageTokenType.( ('(')
DLanguageTokenType.& ('&')
DLanguageTokenType.ID ('uselessFun')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTask')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('put')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('uselessTask')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTask')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('uselessTasks')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('uselessTask')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('workForce')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.LINE_COMMENT ('// Test the case of non-random access + ref returns.')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.int ('int')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RemoveRandom')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.int ('int')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('front')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('front')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('popFront')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.bool ('bool')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('empty')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('refRange')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('RemoveRandom')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ref ('ref')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('refRange')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('                ')
DLanguageTokenType.ID ('elem')
DLanguageTokenType.++ ('++')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType., (',')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType.] (']')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('text')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('stderr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"Nums:  "')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('nums')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('            ')
DLanguageTokenType.ID ('poolInstance')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stop')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.version ('version')
DLanguageTokenType.( ('(')
DLanguageTokenType.unittest ('unittest')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.struct ('struct')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('__S_12733')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.invariant ('invariant')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('checksum')
WHITE_SPACE (' ')
DLanguageTokenType.== ('==')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1234567890')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.this ('this')
DLanguageTokenType.( ('(')
DLanguageTokenType.ulong ('ulong')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('u')
DLanguageTokenType.) (')')
DLanguageTokenType.{ ('{')
DLanguageTokenType.ID ('n')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('u')
DLanguageTokenType.; (';')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('opAssign')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('__S_12733')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('s')
DLanguageTokenType.) (')')
DLanguageTokenType.{ ('{')
DLanguageTokenType.this ('this')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('n')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('s')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('n')
DLanguageTokenType.; (';')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ulong ('ulong')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('n')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ulong ('ulong')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('checksum')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1234567890')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('__genPair_12733')
DLanguageTokenType.( ('(')
DLanguageTokenType.ulong ('ulong')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('n')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('__S_12733')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('n')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.ulong ('ulong')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('data')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.[ ('[')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2UL')
DLanguageTokenType.^^ ('^^')
DLanguageTokenType.INTEGER_LITERAL ('59')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2UL')
DLanguageTokenType.^^ ('^^')
DLanguageTokenType.INTEGER_LITERAL ('59')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2UL')
DLanguageTokenType.^^ ('^^')
DLanguageTokenType.INTEGER_LITERAL ('59')
DLanguageTokenType.- ('-')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('112_272_537_195_293UL')
WHITE_SPACE (' ')
DLanguageTokenType.] (']')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.auto ('auto')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('result')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('taskPool')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('amap')
DLanguageTokenType.! ('!')
DLanguageTokenType.ID ('__genPair_12733')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('data')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// this test was in std.range, but caused cycles.')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.__traits ('__traits')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('compiles')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
WHITE_SPACE (' ')
DLanguageTokenType.foreach ('foreach')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('iota')
DLanguageTokenType.( ('(')
DLanguageTokenType.INTEGER_LITERAL ('0')
DLanguageTokenType., (',')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('100UL')
DLanguageTokenType.) (')')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.) (')')
WHITE_SPACE (' ')
DLanguageTokenType.{ ('{')
DLanguageTokenType.} ('}')
WHITE_SPACE (' ')
DLanguageTokenType.} ('}')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.long ('long')
DLanguageTokenType.[ ('[')
DLanguageTokenType.] (']')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.static ('static')
WHITE_SPACE (' ')
DLanguageTokenType.assert ('assert')
DLanguageTokenType.( ('(')
DLanguageTokenType.is ('is')
DLanguageTokenType.( ('(')
DLanguageTokenType.typeof ('typeof')
DLanguageTokenType.( ('(')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('arr')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('parallel')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('each')
DLanguageTokenType.! ('!')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"a++"')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.} ('}')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
