DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdio')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.void ('void')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('main')
DLanguageTokenType.( ('(')
DLanguageTokenType.) (')')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n\n')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('number')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.ID ('string')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('message')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.switch ('switch')
WHITE_SPACE (' ')
DLanguageTokenType.( ('(')
DLanguageTokenType.ID ('number')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.default ('default')
DLanguageTokenType.: (':')
WHITE_SPACE ('    ')
DLanguageTokenType.LINE_COMMENT ('// valid: ends with 'throw'')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.throw ('throw')
WHITE_SPACE (' ')
DLanguageTokenType.new ('new')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('Exception')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"unknown number"')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('3')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// valid: ends with 'break' (break out of the 'switch' only)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('message')
WHITE_SPACE (' ')
DLanguageTokenType.~= ('~=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"three "')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.break ('break')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('4')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// valid: ends with 'continue' (continue the enclosing loop)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('message')
WHITE_SPACE (' ')
DLanguageTokenType.~= ('~=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"four "')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.continue ('continue')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('5')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// valid: ends with 'goto' (explicit fall-through to next case.)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('message')
WHITE_SPACE (' ')
DLanguageTokenType.~= ('~=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"five "')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.goto ('goto')
WHITE_SPACE (' ')
DLanguageTokenType.case ('case')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('6')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// ERROR: implicit fall-through')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('message')
WHITE_SPACE (' ')
DLanguageTokenType.~= ('~=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"six "')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('1')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// valid: the body is empty')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.case ('case')
WHITE_SPACE (' ')
DLanguageTokenType.INTEGER_LITERAL ('2')
DLanguageTokenType.: (':')
WHITE_SPACE ('     ')
DLanguageTokenType.LINE_COMMENT ('// valid: this is the last case in the switch statement.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLanguageTokenType.ID ('message')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"one or two"')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
WHITE_SPACE ('\n\n')
DLanguageTokenType.} ('}')
