DLanguageTokenType.import ('singleImport')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('std')
DLanguageTokenType.. ('.')
DLanguageTokenType.ID ('stdio')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('y')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('pz')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n\n')
DLanguageTokenType.pure ('pure')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('foo')
DLanguageTokenType.( ('(')
DLanguageTokenType.int ('int')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DLanguageTokenType.char ('char')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('p')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DLanguageTokenType.const ('const')
WHITE_SPACE (' ')
DLanguageTokenType.char ('char')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('q')
DLanguageTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DLanguageTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DLanguageTokenType.int ('int')
DLanguageTokenType.* ('*')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('s')
DLanguageTokenType.) (')')
WHITE_SPACE ('\n')
DLanguageTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.debug ('debug')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('writeln')
DLanguageTokenType.( ('(')
DLanguageTokenType.DOUBLE_QUOTED_STRING ('"in foo()"')
DLanguageTokenType.) (')')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.LINE_COMMENT ('// ok, impure code allowed in debug statement')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('x')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('   ')
DLanguageTokenType.LINE_COMMENT ('// error, modifying global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('x')
DLanguageTokenType.; (';')
WHITE_SPACE ('   ')
DLanguageTokenType.LINE_COMMENT ('// error, reading mutable global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('y')
DLanguageTokenType.; (';')
WHITE_SPACE ('   ')
DLanguageTokenType.LINE_COMMENT ('// ok, reading immutable global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.ID ('i')
WHITE_SPACE (' ')
DLanguageTokenType.= ('=')
WHITE_SPACE (' ')
DLanguageTokenType.* ('*')
DLanguageTokenType.ID ('pz')
DLanguageTokenType.; (';')
WHITE_SPACE (' ')
DLanguageTokenType.LINE_COMMENT ('// error, reading const global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLanguageTokenType.return ('return')
WHITE_SPACE (' ')
DLanguageTokenType.ID ('i')
DLanguageTokenType.; (';')
WHITE_SPACE ('\n')
DLanguageTokenType.} ('}')
