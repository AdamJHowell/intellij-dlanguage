D Language File
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('factorial')
  PsiElement(DLanguageTokenType.()('(')
  PsiElement(DLanguageTokenType.int)('int')
  PsiErrorElement:<basic type 2 x> or DLanguageTokenType.) expected, got 'n'
    <empty list>
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      LABELED_STATEMENT
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('n')
        PsiElement(DLanguageTokenType.:)(':')
        DLanguageStatementImpl(STATEMENT)
          DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
            DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
              DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                    DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
          PsiErrorElement:<add expression>, <equal expression>, <identity expression>, <in expression>, <mul expression>, <rel expression>, <shift expression>, <unary expression>, DLanguageTokenType.%=, DLanguageTokenType.&, DLanguageTokenType.&&, DLanguageTokenType.&=, DLanguageTokenType.*=, DLanguageTokenType.+=, DLanguageTokenType.,, DLanguageTokenType.-=, DLanguageTokenType./=, DLanguageTokenType.;, DLanguageTokenType.<<=, DLanguageTokenType.=, DLanguageTokenType.>>=, DLanguageTokenType.>>>=, DLanguageTokenType.?, DLanguageTokenType.^, DLanguageTokenType.^=, DLanguageTokenType.^^, DLanguageTokenType.^^=, DLanguageTokenType.|=, DLanguageTokenType.|| or DLanguageTokenType.~= expected, got ')'
            PsiElement(DLanguageTokenType.))(')')
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DLanguageTokenType.{)('{')
        DLanguageStatementListImpl(STATEMENT_LIST)
          DLanguageStatementImpl(STATEMENT)
            DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                ENUM_DECLARATION
                  DLanguageAnonymousEnumDeclarationImpl(ANONYMOUS_ENUM_DECLARATION)
                    PsiElement(DLanguageTokenType.enum)('enum')
                    PsiElement(DLanguageTokenType.{)('{')
                    DLanguageEnumMembersImpl(ENUM_MEMBERS)
                      ENUM_MEMBER
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('factorial')
                        PsiElement(DLanguageTokenType.=)('=')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
                    PsiElement(DLanguageTokenType.})('}')
        PsiElement(DLanguageTokenType.})('}')
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('factorial')
  PsiErrorElement:<import declaration>, DLanguageTokenType.(, DLanguageTokenType.*, DLanguageTokenType.., DLanguageTokenType.;, DLanguageTokenType.@, DLanguageTokenType.ID, DLanguageTokenType.[, DLanguageTokenType.__gshared, DLanguageTokenType.abstract, DLanguageTokenType.alias, DLanguageTokenType.align, DLanguageTokenType.auto, DLanguageTokenType.bool, DLanguageTokenType.byte, DLanguageTokenType.cdouble, DLanguageTokenType.cfloat, DLanguageTokenType.char, DLanguageTokenType.class, DLanguageTokenType.const, DLanguageTokenType.creal, DLanguageTokenType.dchar, DLanguageTokenType.debug, DLanguageTokenType.delegate, DLanguageTokenType.delete, DLanguageTokenType.deprecated, DLanguageTokenType.double, DLanguageTokenType.else, DLanguageTokenType.enum, DLanguageTokenType.export, DLanguageTokenType.extern, DLanguageTokenType.final, DLanguageTokenType.float, DLanguageTokenType.function, DLanguageTokenType.idouble, DLanguageTokenType.if, DLanguageTokenType.ifloat, DLanguageTokenType.immutable, DLanguageTokenType.inout, DLanguageTokenType.int, DLanguageTokenType.interface, DLanguageTokenType.invariant, DLanguageTokenType.ireal, DLanguageTokenType.long, DLanguageTokenType.mixin, DLanguageTokenType.new, DLanguageTokenType.nothrow, DLanguageTokenType.override, DLanguageTokenType.package, DLanguageTokenType.pragma and ... expected, got '('
    <empty list>
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
              DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  DLanguageFunctionLiteralImpl(FUNCTION_LITERAL)
                    DLanguageParameterMemberAttributesImpl(PARAMETER_MEMBER_ATTRIBUTES)
                      DLanguageParametersImpl(PARAMETERS)
                        PsiElement(DLanguageTokenType.()('(')
                        DLanguageParameterListImpl(PARAMETER_LIST)
                          PARAMETER
                            DLanguageBasicTypeImpl(BASIC_TYPE)
                              DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLanguageTokenType.int)('int')
                            DLanguageDeclaratorImpl(DECLARATOR)
                              DLanguageVarDeclaratorImpl(VAR_DECLARATOR)
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('n')
                        PsiElement(DLanguageTokenType.))(')')
                    DLanguageFunctionLiteralBodyImpl(FUNCTION_LITERAL_BODY)
                      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                        PsiElement(DLanguageTokenType.{)('{')
                        DLanguageStatementListImpl(STATEMENT_LIST)
                          DLanguageStatementImpl(STATEMENT)
                            DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                              DLanguageDeclarationImpl(DECLARATION)
                                ENUM_DECLARATION
                                  DLanguageAnonymousEnumDeclarationImpl(ANONYMOUS_ENUM_DECLARATION)
                                    PsiElement(DLanguageTokenType.enum)('enum')
                            PsiElement(DLanguageTokenType.{)('{')
                            PsiErrorElement:DLanguageTokenType.ID expected, got 'factorial'
                              <empty list>
                          DLanguageStatementImpl(STATEMENT)
                            DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                              DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('factorial')
                                    PsiElement(DLanguageTokenType.=)('=')
                                    DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                          DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                            IDENTIFIER
                                              PsiElement(DLanguageTokenType.ID)('n')
                                      DLanguageMulExpression_Impl(MUL_EXPRESSION_)
                                        PsiElement(DLanguageTokenType.*)('*')
                                        DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                          DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                                                IDENTIFIER
                                                  PsiElement(DLanguageTokenType.ID)('factorial')
                                                DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                                                  PsiElement(DLanguageTokenType.!)('!')
                                                  PsiElement(DLanguageTokenType.()('(')
                                                  DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                                    DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                                      DLanguageTypeImpl(TYPE)
                                                        DLanguageTypeCtorsImpl(TYPE_CTORS)
                                                          <empty list>
                                                        DLanguageBasicTypeImpl(BASIC_TYPE)
                                                          DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                                            IDENTIFIER
                                                              PsiElement(DLanguageTokenType.ID)('n')
                                      DLanguageAddExpression_Impl(ADD_EXPRESSION_)
                                        PsiErrorElement:<basic type 2 x>, <mul expression>, <template instance>, DLanguageTokenType.%, DLanguageTokenType.), DLanguageTokenType.*, DLanguageTokenType.+, DLanguageTokenType.,, DLanguageTokenType.-, DLanguageTokenType.., DLanguageTokenType./, DLanguageTokenType.[, DLanguageTokenType.^^, DLanguageTokenType.delegate or DLanguageTokenType.function expected, got '-'
                                          <empty list>
                                        PsiElement(DLanguageTokenType.-)('-')
                                        DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                          DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
                            PsiElement(DLanguageTokenType.))(')')
                        PsiElement(DLanguageTokenType.})('}')
  PsiErrorElement:'}' unexpected
    PsiElement(DLanguageTokenType.})('}')
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        FUNC_DECLARATION
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLanguageTokenType.void)('void')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('test')
          DLanguageParametersImpl(PARAMETERS)
            PsiElement(DLanguageTokenType.()('(')
            PsiElement(DLanguageTokenType.))(')')
          DLanguageFunctionBodyImpl(FUNCTION_BODY)
            DLanguageBlockStatementImpl(BLOCK_STATEMENT)
              PsiElement(DLanguageTokenType.{)('{')
              DLanguageStatementListImpl(STATEMENT_LIST)
                DLanguageStatementImpl(STATEMENT)
                  DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('writefln')
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          DLanguageStringLiteralsImpl(STRING_LITERALS)
                                            DLanguageStringLiteralImpl(STRING_LITERAL)
                                              PsiElement(DLanguageTokenType.DOUBLE_QUOTED_STRING)('"%s"')
                                  PsiElement(DLanguageTokenType.,)(',')
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                                            IDENTIFIER
                                              PsiElement(DLanguageTokenType.ID)('factorial')
                                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                                              PsiElement(DLanguageTokenType.!)('!')
                                              PsiElement(DLanguageTokenType.()('(')
                                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                      DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('4')
                                              PsiElement(DLanguageTokenType.))(')')
                                PsiElement(DLanguageTokenType.))(')')
                      PsiElement(DLanguageTokenType.;)(';')
              PsiComment(DLanguageTokenType.LINE_COMMENT)('// prints 24')
              PsiElement(DLanguageTokenType.})('}')