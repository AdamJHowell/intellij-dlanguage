D Language File
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.int)('int')
      DLanguageTypeCtorImpl(TYPE_CTOR)
        PsiElement(DLanguageTokenType.[)('[')
        PsiElement(DLanguageTokenType.])(']')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        PsiElement(DLanguageTokenType.ID)('a')
      PsiElement(DLanguageTokenType.;)(';')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.int)('int')
      DLanguageTypeCtorImpl(TYPE_CTOR)
        PsiElement(DLanguageTokenType.[)('[')
        PsiElement(DLanguageTokenType.])(']')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        PsiElement(DLanguageTokenType.ID)('b')
      PsiElement(DLanguageTokenType.;)(';')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.int)('int')
      DLanguageTypeCtorImpl(TYPE_CTOR)
        PsiElement(DLanguageTokenType.[)('[')
        PsiElement(DLanguageTokenType.])(']')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        PsiElement(DLanguageTokenType.ID)('c')
      PsiElement(DLanguageTokenType.;)(';')
  DLanguageDeclarationImpl(DECLARATION)
    UNIT_TESTING
      UNIT_TESTING
        PsiElement(DLanguageTokenType.unittest)('unittest')
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                PsiElement(DLanguageTokenType.ID)('a')
                        PsiElement(DLanguageTokenType.=)('=')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                            DLanguageAddExpression_Impl(ADD_EXPRESSION_)
                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                    PsiElement(DLanguageTokenType.ID)('b')
                              PsiElement(DLanguageTokenType.~)('~')
                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                    PsiElement(DLanguageTokenType.ID)('c')
                    PsiElement(DLanguageTokenType.;)(';')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('// Create an array from the concatenation')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('// of the b and c arrays')
          PsiElement(DLanguageTokenType.})('}')