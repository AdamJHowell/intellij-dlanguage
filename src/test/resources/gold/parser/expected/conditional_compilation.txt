D Language File
  DLanguageDeclarationImpl(DECLARATION)
    UNIT_TESTING
      UNIT_TESTING
        PsiElement(DLanguageTokenType.unittest)('unittest')
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    PsiElement(DLanguageTokenType.int)('int')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('k')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
                    DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                      DLanguageVersionConditionImpl(VERSION_CONDITION)
                        PsiElement(DLanguageTokenType.version)('version')
                        PsiElement(DLanguageTokenType.()('(')
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('Demo')
                        PsiElement(DLanguageTokenType.))(')')
                    PsiComment(DLanguageTokenType.LINE_COMMENT)('// compile in this code block for the demo version')
                    DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                      DLanguageStatementImpl(STATEMENT)
                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                            PsiElement(DLanguageTokenType.{)('{')
                            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                              DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                DLanguageDeclarationImpl(DECLARATION)
                                  DLanguageTypeImpl(TYPE)
                                    DLanguageTypeImpl(TYPE)
                                      PsiElement(DLanguageTokenType.int)('int')
                                  DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                                    DLanguageDeclaratorImpl(DECLARATOR)
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('i')
                                    PsiElement(DLanguageTokenType.;)(';')
                              DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                DLanguageDeclarationImpl(DECLARATION)
                                  DLanguageTypeImpl(TYPE)
                                    DLanguageTypeImpl(TYPE)
                                      PsiElement(DLanguageTokenType.int)('int')
                                  DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                                    DLanguageDeclaratorImpl(DECLARATOR)
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('k')
                                    PsiElement(DLanguageTokenType.;)(';')
                              PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, k already defined')
                              DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                DLanguageStatementImpl(STATEMENT)
                                  DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                                  IDENTIFIER
                                                    PsiElement(DLanguageTokenType.ID)('i')
                                          PsiElement(DLanguageTokenType.=)('=')
                                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                                      PsiElement(DLanguageTokenType.;)(';')
                            PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('x')
                        PsiElement(DLanguageTokenType.=)('=')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// uses the i declared above')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('X86')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
                  PsiElement(DLanguageTokenType.else)('else')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('ProfessionalEdition')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureA')
                      PsiElement(DLanguageTokenType.;)(';')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureB')
                      PsiElement(DLanguageTokenType.;)(';')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureC')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('HomeEdition')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureA')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureB')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('Foo')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageTypeImpl(TYPE)
                      DLanguageTypeImpl(TYPE)
                        PsiElement(DLanguageTokenType.int)('int')
                    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                      DLanguageDeclaratorImpl(DECLARATOR)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('x')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                  PsiElement(DLanguageTokenType.version)('version')
                  PsiElement(DLanguageTokenType.=)('=')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('Foo')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, Foo already used')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                CLASS_DECLARATION
                  PsiElement(DLanguageTokenType.class)('class')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('Foo')
                  DLanguageAggregateBodyImpl(AGGREGATE_BODY)
                    PsiElement(DLanguageTokenType.{)('{')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageTypeImpl(TYPE)
                        DLanguageTypeImpl(TYPE)
                          PsiElement(DLanguageTokenType.int)('int')
                      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLanguageDeclaratorImpl(DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('a')
                        PsiElement(DLanguageTokenType.,)(',')
                        DLanguageDeclaratorImpl(DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('b')
                        PsiElement(DLanguageTokenType.;)(';')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageVersionConditionImpl(VERSION_CONDITION)
                            PsiElement(DLanguageTokenType.version)('version')
                            PsiElement(DLanguageTokenType.()('(')
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('full')
                            PsiElement(DLanguageTokenType.))(')')
                        PsiElement(DLanguageTokenType.{)('{')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          FUNC_DECLARATION
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('extrafunctionality')
                            DLanguageParametersImpl(PARAMETERS)
                              PsiElement(DLanguageTokenType.()('(')
                              PsiElement(DLanguageTokenType.))(')')
                            DLanguageFunctionBodyImpl(FUNCTION_BODY)
                              DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                PsiElement(DLanguageTokenType.{)('{')
                                DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                  DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                    DLanguageStatementImpl(STATEMENT)
                                      DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                        DLanguageReturnStatementImpl(RETURN_STATEMENT)
                                          PsiElement(DLanguageTokenType.return)('return')
                                          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
                                          PsiElement(DLanguageTokenType.;)(';')
                                PsiComment(DLanguageTokenType.LINE_COMMENT)('// extra functionality is supported')
                                PsiElement(DLanguageTokenType.})('}')
                        PsiElement(DLanguageTokenType.})('}')
                        PsiElement(DLanguageTokenType.else)('else')
                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// demo')
                        PsiElement(DLanguageTokenType.{)('{')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          FUNC_DECLARATION
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('extrafunctionality')
                            DLanguageParametersImpl(PARAMETERS)
                              PsiElement(DLanguageTokenType.()('(')
                              PsiElement(DLanguageTokenType.))(')')
                            DLanguageFunctionBodyImpl(FUNCTION_BODY)
                              DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                PsiElement(DLanguageTokenType.{)('{')
                                DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                  DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                    DLanguageStatementImpl(STATEMENT)
                                      DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                        DLanguageReturnStatementImpl(RETURN_STATEMENT)
                                          PsiElement(DLanguageTokenType.return)('return')
                                          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                          PsiElement(DLanguageTokenType.;)(';')
                                PsiComment(DLanguageTokenType.LINE_COMMENT)('// extra functionality is not supported')
                                PsiElement(DLanguageTokenType.})('}')
                        PsiElement(DLanguageTokenType.})('}')
                    PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('n')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in version code if version level is >= n')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('identifier')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in version code if version')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// keyword is identifier')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('DigitalMars_funky_extension')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                CLASS_DECLARATION
                  PsiElement(DLanguageTokenType.class)('class')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('Foo')
                  DLanguageAggregateBodyImpl(AGGREGATE_BODY)
                    PsiElement(DLanguageTokenType.{)('{')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageTypeImpl(TYPE)
                        DLanguageTypeImpl(TYPE)
                          PsiElement(DLanguageTokenType.int)('int')
                      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLanguageDeclaratorImpl(DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('a')
                        PsiElement(DLanguageTokenType.,)(',')
                        DLanguageDeclaratorImpl(DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('b')
                        PsiElement(DLanguageTokenType.;)(';')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageDebugConditionImpl(DEBUG_CONDITION)
                            PsiElement(DLanguageTokenType.debug)('debug')
                        PsiElement(DLanguageTokenType.:)(':')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLanguageDeclaratorImpl(DECLARATOR)
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('flag')
                            PsiElement(DLanguageTokenType.;)(';')
                    PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
                    DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                      DLanguageDebugConditionImpl(DEBUG_CONDITION)
                        PsiElement(DLanguageTokenType.debug)('debug')
                        PsiElement(DLanguageTokenType.()('(')
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('foo')
                        PsiElement(DLanguageTokenType.))(')')
                    DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                      DLanguageStatementImpl(STATEMENT)
                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                            DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        IDENTIFIER
                                          PsiElement(DLanguageTokenType.ID)('writeln')
                                    DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                      PsiElement(DLanguageTokenType.()('(')
                                      DLanguageArgumentListImpl(ARGUMENT_LIST)
                                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                PsiElement(DLanguageTokenType.DOUBLE_QUOTED_STRING)('"Foo"')
                                      PsiElement(DLanguageTokenType.))(')')
                            PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageDebugSpecificationImpl(DEBUG_SPECIFICATION)
                  PsiElement(DLanguageTokenType.debug)('debug')
                  PsiElement(DLanguageTokenType.=)('=')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('foo')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, foo used before set')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageDebugConditionImpl(DEBUG_CONDITION)
                      PsiElement(DLanguageTokenType.debug)('debug')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('IntegerLiteral')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in debug code if debug level is >= IntegerLiteral')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageDebugConditionImpl(DEBUG_CONDITION)
                      PsiElement(DLanguageTokenType.debug)('debug')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('identifier')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in debug code if debug keyword is identifier')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageAttributeImpl(ATTRIBUTE)
                  PsiElement(DLanguageTokenType.const)('const')
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    PsiElement(DLanguageTokenType.int)('int')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.=)('=')
                    DLanguageInitializerImpl(INITIALIZER)
                      DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    PsiElement(DLanguageTokenType.int)('int')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('j')
                    PsiElement(DLanguageTokenType.=)('=')
                    DLanguageInitializerImpl(INITIALIZER)
                      DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('4')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                      DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                        PsiElement(DLanguageTokenType.static)('static')
                        PsiElement(DLanguageTokenType.if)('if')
                        PsiElement(DLanguageTokenType.()('(')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('i')
                            DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                              PsiElement(DLanguageTokenType.==)('==')
                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                        PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok, at module scope')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageTypeImpl(TYPE)
                      DLanguageTypeImpl(TYPE)
                        PsiElement(DLanguageTokenType.int)('int')
                    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                      DLanguageDeclaratorImpl(DECLARATOR)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('x')
                      PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                CLASS_DECLARATION
                  PsiElement(DLanguageTokenType.class)('class')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('C')
                  DLanguageAggregateBodyImpl(AGGREGATE_BODY)
                    PsiElement(DLanguageTokenType.{)('{')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageAttributeImpl(ATTRIBUTE)
                        PsiElement(DLanguageTokenType.const)('const')
                      DLanguageTypeImpl(TYPE)
                        DLanguageTypeImpl(TYPE)
                          PsiElement(DLanguageTokenType.int)('int')
                      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLanguageDeclaratorImpl(DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('k')
                          PsiElement(DLanguageTokenType.=)('=')
                          DLanguageInitializerImpl(INITIALIZER)
                            DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('5')
                        PsiElement(DLanguageTokenType.;)(';')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              PsiElement(DLanguageTokenType.static)('static')
                              PsiElement(DLanguageTokenType.if)('if')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        IDENTIFIER
                                          PsiElement(DLanguageTokenType.ID)('i')
                                  DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                    PsiElement(DLanguageTokenType.==)('==')
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                              PsiElement(DLanguageTokenType.))(')')
                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLanguageDeclaratorImpl(DECLARATOR)
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('x')
                            PsiElement(DLanguageTokenType.;)(';')
                        PsiElement(DLanguageTokenType.else)('else')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.long)('long')
                          DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLanguageDeclaratorImpl(DECLARATOR)
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('x')
                            PsiElement(DLanguageTokenType.;)(';')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              PsiElement(DLanguageTokenType.static)('static')
                              PsiElement(DLanguageTokenType.if)('if')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        IDENTIFIER
                                          PsiElement(DLanguageTokenType.ID)('j')
                                  DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                    PsiElement(DLanguageTokenType.==)('==')
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                              PsiElement(DLanguageTokenType.))(')')
                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, j is not a constant')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLanguageDeclaratorImpl(DECLARATOR)
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('y')
                            PsiElement(DLanguageTokenType.;)(';')
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              PsiElement(DLanguageTokenType.static)('static')
                              PsiElement(DLanguageTokenType.if)('if')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        IDENTIFIER
                                          PsiElement(DLanguageTokenType.ID)('k')
                                  DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                    PsiElement(DLanguageTokenType.==)('==')
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('5')
                              PsiElement(DLanguageTokenType.))(')')
                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok, k is in current scope')
                        DLanguageDeclarationImpl(DECLARATION)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLanguageDeclaratorImpl(DECLARATOR)
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('z')
                            PsiElement(DLanguageTokenType.;)(';')
                    PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                TEMPLATE_DECLARATION
                  PsiElement(DLanguageTokenType.template)('template')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('INT')
                  DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
                    PsiElement(DLanguageTokenType.()('(')
                    DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
                      TEMPLATE_PARAMETER
                        DLanguageTemplateValueParameterImpl(TEMPLATE_VALUE_PARAMETER)
                          DLanguageTypeImpl(TYPE)
                            DLanguageTypeImpl(TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                      DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                          DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                            PsiElement(DLanguageTokenType.static)('static')
                            PsiElement(DLanguageTokenType.if)('if')
                            PsiElement(DLanguageTokenType.()('(')
                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('i')
                                DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                  PsiElement(DLanguageTokenType.==)('==')
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('32')
                            PsiElement(DLanguageTokenType.))(')')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
                          PsiElement(DLanguageTokenType.alias)('alias')
                          ALIAS_DECLARATION_Y
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            PsiElement(DLanguageTokenType.=)('=')
                            DLanguageTypeImpl(TYPE)
                              DLanguageTypeImpl(TYPE)
                                PsiElement(DLanguageTokenType.int)('int')
                          PsiElement(DLanguageTokenType.;)(';')
                      PsiElement(DLanguageTokenType.else)('else')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                                PsiElement(DLanguageTokenType.static)('static')
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('i')
                                    DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                      PsiElement(DLanguageTokenType.==)('==')
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('16')
                                PsiElement(DLanguageTokenType.))(')')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
                              PsiElement(DLanguageTokenType.alias)('alias')
                              ALIAS_DECLARATION_Y
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('INT')
                                PsiElement(DLanguageTokenType.=)('=')
                                DLanguageTypeImpl(TYPE)
                                  DLanguageTypeImpl(TYPE)
                                    PsiElement(DLanguageTokenType.short)('short')
                              PsiElement(DLanguageTokenType.;)(';')
                          PsiElement(DLanguageTokenType.else)('else')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageStaticAssertImpl(STATIC_ASSERT)
                              DLanguageStaticAssertImpl(STATIC_ASSERT)
                                DLanguageStaticAssertImpl(STATIC_ASSERT)
                                  DLanguageStaticAssertImpl(STATIC_ASSERT)
                                    PsiElement(DLanguageTokenType.static)('static')
                                    DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                      PsiElement(DLanguageTokenType.assert)('assert')
                                      PsiElement(DLanguageTokenType.()('(')
                                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                      PsiElement(DLanguageTokenType.))(')')
                                    PsiElement(DLanguageTokenType.;)(';')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// not supported')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('32')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('a')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// a is an int')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('16')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('b')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// b is a short')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('17')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageDeclaratorImpl(DECLARATOR)
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('c')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, static assert trips')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageTypeImpl(TYPE)
                    PsiElement(DLanguageTokenType.void)('void')
                FUNC_DECLARATION
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('foo')
                  DLanguageParametersImpl(PARAMETERS)
                    PsiElement(DLanguageTokenType.()('(')
                    PsiElement(DLanguageTokenType.))(')')
                  DLanguageFunctionBodyImpl(FUNCTION_BODY)
                    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                          DLanguageStatementImpl(STATEMENT)
                            DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                              DLanguageIfStatementImpl(IF_STATEMENT)
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                PsiElement(DLanguageTokenType.))(')')
                                DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                  DLanguageStatementImpl(STATEMENT)
                                    DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                        PsiElement(DLanguageTokenType.{)('{')
                                        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                            DLanguageStatementImpl(STATEMENT)
                                              DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                                DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                                    DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                      DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                                        DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                                            PsiElement(DLanguageTokenType.assert)('assert')
                                                            PsiElement(DLanguageTokenType.()('(')
                                                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                                            PsiElement(DLanguageTokenType.))(')')
                                                  PsiElement(DLanguageTokenType.;)(';')
                                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// never trips')
                                          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                            DLanguageDeclarationImpl(DECLARATION)
                                              DLanguageStaticAssertImpl(STATIC_ASSERT)
                                                DLanguageStaticAssertImpl(STATIC_ASSERT)
                                                  DLanguageStaticAssertImpl(STATIC_ASSERT)
                                                    DLanguageStaticAssertImpl(STATIC_ASSERT)
                                                      PsiElement(DLanguageTokenType.static)('static')
                                                      DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                                        PsiElement(DLanguageTokenType.assert)('assert')
                                                        PsiElement(DLanguageTokenType.()('(')
                                                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                          DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                                        PsiElement(DLanguageTokenType.))(')')
                                                      PsiElement(DLanguageTokenType.;)(';')
                                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// always trips')
                                        PsiElement(DLanguageTokenType.})('}')
                        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                              DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                                DLanguageVersionConditionImpl(VERSION_CONDITION)
                                  PsiElement(DLanguageTokenType.version)('version')
                                  PsiElement(DLanguageTokenType.()('(')
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('BAR')
                                  PsiElement(DLanguageTokenType.))(')')
                              PsiElement(DLanguageTokenType.{)('{')
                              PsiElement(DLanguageTokenType.})('}')
                              PsiElement(DLanguageTokenType.else)('else')
                              PsiElement(DLanguageTokenType.{)('{')
                              DLanguageDeclarationImpl(DECLARATION)
                                DLanguageStaticAssertImpl(STATIC_ASSERT)
                                  DLanguageStaticAssertImpl(STATIC_ASSERT)
                                    DLanguageStaticAssertImpl(STATIC_ASSERT)
                                      DLanguageStaticAssertImpl(STATIC_ASSERT)
                                        PsiElement(DLanguageTokenType.static)('static')
                                        DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                          PsiElement(DLanguageTokenType.assert)('assert')
                                          PsiElement(DLanguageTokenType.()('(')
                                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                          PsiElement(DLanguageTokenType.))(')')
                                        PsiElement(DLanguageTokenType.;)(';')
                              PsiComment(DLanguageTokenType.LINE_COMMENT)('// trips when version BAR is not defined')
                              PsiElement(DLanguageTokenType.})('}')
                      PsiElement(DLanguageTokenType.})('}')
          PsiElement(DLanguageTokenType.})('}')