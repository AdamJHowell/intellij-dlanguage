D Language File
  DLanguageDeclarationImpl(DECLARATION)
    UNITTEST
      UNITTEST
        PsiElement(DLanguageTokenType.unittest)('unittest')
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                      PsiElement(DLanguageTokenType.int)('int')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('k')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
                    DLanguageCompileConditionImpl(COMPILE_CONDITION)
                      DLanguageVersionConditionImpl(VERSION_CONDITION)
                        PsiElement(DLanguageTokenType.version)('version')
                        PsiElement(DLanguageTokenType.()('(')
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('Demo')
                        PsiElement(DLanguageTokenType.))(')')
                    PsiComment(DLanguageTokenType.LINE_COMMENT)('// compile in this code block for the demo version')
                    DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                      DLanguageStatementImpl(STATEMENT)
                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                            PsiElement(DLanguageTokenType.{)('{')
                            DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
                              DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                DLanguageDeclarationImpl(DECLARATION)
                                  DLanguageTypeImpl(TYPE)
                                    DLanguageType_2Impl(TYPE_2)
                                      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                        PsiElement(DLanguageTokenType.int)('int')
                                  DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                                    DECLARATOR
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('i')
                                    PsiElement(DLanguageTokenType.;)(';')
                              DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                DLanguageDeclarationImpl(DECLARATION)
                                  DLanguageTypeImpl(TYPE)
                                    DLanguageType_2Impl(TYPE_2)
                                      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                        PsiElement(DLanguageTokenType.int)('int')
                                  DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                                    DECLARATOR
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('k')
                                    PsiElement(DLanguageTokenType.;)(';')
                              PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, k already defined')
                              DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                DLanguageStatementImpl(STATEMENT)
                                  DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                      DLanguageExpressionImpl(EXPRESSION)
                                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                                  IDENTIFIER
                                                    PsiElement(DLanguageTokenType.ID)('i')
                                          PsiElement(DLanguageTokenType.=)('=')
                                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                                      PsiElement(DLanguageTokenType.;)(';')
                            PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionImpl(EXPRESSION)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('x')
                        PsiElement(DLanguageTokenType.=)('=')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// uses the i declared above')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('X86')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
                  PsiElement(DLanguageTokenType.else)('else')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('ProfessionalEdition')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureA')
                      PsiElement(DLanguageTokenType.;)(';')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureB')
                      PsiElement(DLanguageTokenType.;)(';')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureC')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('HomeEdition')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.=)('=')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureA')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('FeatureB')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('Foo')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageTypeImpl(TYPE)
                      DLanguageType_2Impl(TYPE_2)
                        DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                          PsiElement(DLanguageTokenType.int)('int')
                    DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                      DECLARATOR
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('x')
                      PsiElement(DLanguageTokenType.;)(';')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageVersionSpecificationImpl(VERSION_SPECIFICATION)
                  PsiElement(DLanguageTokenType.version)('version')
                  PsiElement(DLanguageTokenType.=)('=')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('Foo')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, Foo already used')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageClassDeclarationImpl(CLASS_DECLARATION)
                  PsiElement(DLanguageTokenType.class)('class')
                  INTERFACE_OR_CLASS
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('Foo')
                    DLanguageStructBodyImpl(STRUCT_BODY)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageTypeImpl(TYPE)
                          DLanguageType_2Impl(TYPE_2)
                            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                        DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                          DECLARATOR
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('a')
                          PsiElement(DLanguageTokenType.,)(',')
                          DECLARATOR
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('b')
                          PsiElement(DLanguageTokenType.;)(';')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageVersionConditionImpl(VERSION_CONDITION)
                              PsiElement(DLanguageTokenType.version)('version')
                              PsiElement(DLanguageTokenType.()('(')
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('full')
                              PsiElement(DLanguageTokenType.))(')')
                          PsiElement(DLanguageTokenType.{)('{')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            FUNCTION_DECLARATION
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('extrafunctionality')
                              DLanguageParametersImpl(PARAMETERS)
                                PsiElement(DLanguageTokenType.()('(')
                                PsiElement(DLanguageTokenType.))(')')
                              DLanguageFunctionBodyImpl(FUNCTION_BODY)
                                DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                  PsiElement(DLanguageTokenType.{)('{')
                                  DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
                                    DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                      DLanguageStatementImpl(STATEMENT)
                                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLanguageReturnStatementImpl(RETURN_STATEMENT)
                                            PsiElement(DLanguageTokenType.return)('return')
                                            DLanguageExpressionImpl(EXPRESSION)
                                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
                                            PsiElement(DLanguageTokenType.;)(';')
                                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// extra functionality is supported')
                                  PsiElement(DLanguageTokenType.})('}')
                          PsiElement(DLanguageTokenType.})('}')
                          PsiElement(DLanguageTokenType.else)('else')
                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// demo')
                          PsiElement(DLanguageTokenType.{)('{')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            FUNCTION_DECLARATION
                              IDENTIFIER
                                PsiElement(DLanguageTokenType.ID)('extrafunctionality')
                              DLanguageParametersImpl(PARAMETERS)
                                PsiElement(DLanguageTokenType.()('(')
                                PsiElement(DLanguageTokenType.))(')')
                              DLanguageFunctionBodyImpl(FUNCTION_BODY)
                                DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                  PsiElement(DLanguageTokenType.{)('{')
                                  DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
                                    DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                      DLanguageStatementImpl(STATEMENT)
                                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLanguageReturnStatementImpl(RETURN_STATEMENT)
                                            PsiElement(DLanguageTokenType.return)('return')
                                            DLanguageExpressionImpl(EXPRESSION)
                                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                            PsiElement(DLanguageTokenType.;)(';')
                                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// extra functionality is not supported')
                                  PsiElement(DLanguageTokenType.})('}')
                          PsiElement(DLanguageTokenType.})('}')
                      PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('n')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in version code if version level is >= n')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('identifier')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in version code if version')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// keyword is identifier')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageVersionConditionImpl(VERSION_CONDITION)
                      PsiElement(DLanguageTokenType.version)('version')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('DigitalMars_funky_extension')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageClassDeclarationImpl(CLASS_DECLARATION)
                  PsiElement(DLanguageTokenType.class)('class')
                  INTERFACE_OR_CLASS
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('Foo')
                    DLanguageStructBodyImpl(STRUCT_BODY)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageTypeImpl(TYPE)
                          DLanguageType_2Impl(TYPE_2)
                            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                        DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                          DECLARATOR
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('a')
                          PsiElement(DLanguageTokenType.,)(',')
                          DECLARATOR
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('b')
                          PsiElement(DLanguageTokenType.;)(';')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageDebugConditionImpl(DEBUG_CONDITION)
                              PsiElement(DLanguageTokenType.debug)('debug')
                          PsiElement(DLanguageTokenType.:)(':')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                              DECLARATOR
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('flag')
                              PsiElement(DLanguageTokenType.;)(';')
                      PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
                    DLanguageCompileConditionImpl(COMPILE_CONDITION)
                      DLanguageDebugConditionImpl(DEBUG_CONDITION)
                        PsiElement(DLanguageTokenType.debug)('debug')
                        PsiElement(DLanguageTokenType.()('(')
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('foo')
                        PsiElement(DLanguageTokenType.))(')')
                    DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                      DLanguageStatementImpl(STATEMENT)
                        DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                            DLanguageExpressionImpl(EXPRESSION)
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                            IDENTIFIER
                                              PsiElement(DLanguageTokenType.ID)('writeln')
                                      DLanguageArgumentsImpl(ARGUMENTS)
                                        PsiElement(DLanguageTokenType.()('(')
                                        DLanguageArgumentListImpl(ARGUMENT_LIST)
                                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLanguageTokenType.DOUBLE_QUOTED_STRING)('"Foo"')
                                        PsiElement(DLanguageTokenType.))(')')
                            PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageDebugSpecificationImpl(DEBUG_SPECIFICATION)
                  PsiElement(DLanguageTokenType.debug)('debug')
                  PsiElement(DLanguageTokenType.=)('=')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('foo')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, foo used before set')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageDebugConditionImpl(DEBUG_CONDITION)
                      PsiElement(DLanguageTokenType.debug)('debug')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('IntegerLiteral')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in debug code if debug level is >= IntegerLiteral')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageDebugConditionImpl(DEBUG_CONDITION)
                      PsiElement(DLanguageTokenType.debug)('debug')
                      PsiElement(DLanguageTokenType.()('(')
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('identifier')
                      PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  PsiElement(DLanguageTokenType.})('}')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// add in debug code if debug keyword is identifier')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageAttributeImpl(ATTRIBUTE)
                  PsiElement(DLanguageTokenType.const)('const')
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                      PsiElement(DLanguageTokenType.int)('int')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.=)('=')
                    DLanguageInitializerImpl(INITIALIZER)
                      DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                      PsiElement(DLanguageTokenType.int)('int')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('j')
                    PsiElement(DLanguageTokenType.=)('=')
                    DLanguageInitializerImpl(INITIALIZER)
                      DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('4')
                  PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLanguageCompileConditionImpl(COMPILE_CONDITION)
                    DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                      DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                        PsiElement(DLanguageTokenType.static)('static')
                        PsiElement(DLanguageTokenType.if)('if')
                        PsiElement(DLanguageTokenType.()('(')
                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('i')
                            DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                              PsiElement(DLanguageTokenType.==)('==')
                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                        PsiElement(DLanguageTokenType.))(')')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok, at module scope')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageTypeImpl(TYPE)
                      DLanguageType_2Impl(TYPE_2)
                        DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                          PsiElement(DLanguageTokenType.int)('int')
                    DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                      DECLARATOR
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('x')
                      PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageClassDeclarationImpl(CLASS_DECLARATION)
                  PsiElement(DLanguageTokenType.class)('class')
                  INTERFACE_OR_CLASS
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('C')
                    DLanguageStructBodyImpl(STRUCT_BODY)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageAttributeImpl(ATTRIBUTE)
                          PsiElement(DLanguageTokenType.const)('const')
                        DLanguageTypeImpl(TYPE)
                          DLanguageType_2Impl(TYPE_2)
                            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                              PsiElement(DLanguageTokenType.int)('int')
                        DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                          DECLARATOR
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('k')
                            PsiElement(DLanguageTokenType.=)('=')
                            DLanguageInitializerImpl(INITIALIZER)
                              DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('5')
                          PsiElement(DLanguageTokenType.;)(';')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                                PsiElement(DLanguageTokenType.static)('static')
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('i')
                                    DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                      PsiElement(DLanguageTokenType.==)('==')
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                                PsiElement(DLanguageTokenType.))(')')
                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                              DECLARATOR
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('x')
                              PsiElement(DLanguageTokenType.;)(';')
                          PsiElement(DLanguageTokenType.else)('else')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.long)('long')
                            DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                              DECLARATOR
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('x')
                              PsiElement(DLanguageTokenType.;)(';')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                                PsiElement(DLanguageTokenType.static)('static')
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('j')
                                    DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                      PsiElement(DLanguageTokenType.==)('==')
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('3')
                                PsiElement(DLanguageTokenType.))(')')
                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, j is not a constant')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                              DECLARATOR
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('y')
                              PsiElement(DLanguageTokenType.;)(';')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                                PsiElement(DLanguageTokenType.static)('static')
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('k')
                                    DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                      PsiElement(DLanguageTokenType.==)('==')
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('5')
                                PsiElement(DLanguageTokenType.))(')')
                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// ok, k is in current scope')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                            DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                              DECLARATOR
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('z')
                              PsiElement(DLanguageTokenType.;)(';')
                      PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                TEMPLATE_DECLARATION
                  PsiElement(DLanguageTokenType.template)('template')
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('INT')
                  DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
                    PsiElement(DLanguageTokenType.()('(')
                    DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
                      TEMPLATE_PARAMETER
                        DLanguageTemplateValueParameterImpl(TEMPLATE_VALUE_PARAMETER)
                          DLanguageTypeImpl(TYPE)
                            DLanguageType_2Impl(TYPE_2)
                              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                PsiElement(DLanguageTokenType.int)('int')
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('i')
                    PsiElement(DLanguageTokenType.))(')')
                  PsiElement(DLanguageTokenType.{)('{')
                  DLanguageDeclarationImpl(DECLARATION)
                    DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                      DLanguageCompileConditionImpl(COMPILE_CONDITION)
                        DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                          DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                            PsiElement(DLanguageTokenType.static)('static')
                            PsiElement(DLanguageTokenType.if)('if')
                            PsiElement(DLanguageTokenType.()('(')
                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('i')
                                DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                  PsiElement(DLanguageTokenType.==)('==')
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('32')
                            PsiElement(DLanguageTokenType.))(')')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
                          PsiElement(DLanguageTokenType.alias)('alias')
                          ALIAS_INITIALIZER
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            PsiElement(DLanguageTokenType.=)('=')
                            DLanguageTypeImpl(TYPE)
                              DLanguageType_2Impl(TYPE_2)
                                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                  PsiElement(DLanguageTokenType.int)('int')
                          PsiElement(DLanguageTokenType.;)(';')
                      PsiElement(DLanguageTokenType.else)('else')
                      DLanguageDeclarationImpl(DECLARATION)
                        DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                          DLanguageCompileConditionImpl(COMPILE_CONDITION)
                            DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                              DLanguageStaticIfConditionImpl(STATIC_IF_CONDITION)
                                PsiElement(DLanguageTokenType.static)('static')
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                                          IDENTIFIER
                                            PsiElement(DLanguageTokenType.ID)('i')
                                    DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                      PsiElement(DLanguageTokenType.==)('==')
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('16')
                                PsiElement(DLanguageTokenType.))(')')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
                              PsiElement(DLanguageTokenType.alias)('alias')
                              ALIAS_INITIALIZER
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('INT')
                                PsiElement(DLanguageTokenType.=)('=')
                                DLanguageTypeImpl(TYPE)
                                  DLanguageType_2Impl(TYPE_2)
                                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                                      PsiElement(DLanguageTokenType.short)('short')
                              PsiElement(DLanguageTokenType.;)(';')
                          PsiElement(DLanguageTokenType.else)('else')
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                              DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                                DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                  DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                    PsiElement(DLanguageTokenType.static)('static')
                                    DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                      PsiElement(DLanguageTokenType.assert)('assert')
                                      PsiElement(DLanguageTokenType.()('(')
                                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                        DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                      PsiElement(DLanguageTokenType.))(')')
                                    PsiElement(DLanguageTokenType.;)(';')
                  PsiComment(DLanguageTokenType.LINE_COMMENT)('// not supported')
                  PsiElement(DLanguageTokenType.})('}')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierOrTemplateChainImpl(IDENTIFIER_OR_TEMPLATE_CHAIN)
                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('32')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('a')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// a is an int')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierOrTemplateChainImpl(IDENTIFIER_OR_TEMPLATE_CHAIN)
                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('16')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('b')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// b is a short')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageSymbolImpl(SYMBOL)
                      DLanguageIdentifierOrTemplateChainImpl(IDENTIFIER_OR_TEMPLATE_CHAIN)
                        DLanguageIdentifierOrTemplateInstanceImpl(IDENTIFIER_OR_TEMPLATE_INSTANCE)
                          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('INT')
                            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                              PsiElement(DLanguageTokenType.!)('!')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('17')
                              PsiElement(DLanguageTokenType.))(')')
                DLanguageVariableDeclarationImpl(VARIABLE_DECLARATION)
                  DECLARATOR
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('c')
                  PsiElement(DLanguageTokenType.;)(';')
            PsiComment(DLanguageTokenType.LINE_COMMENT)('// error, static assert trips')
            DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageTypeImpl(TYPE)
                  DLanguageType_2Impl(TYPE_2)
                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                      PsiElement(DLanguageTokenType.void)('void')
                FUNCTION_DECLARATION
                  IDENTIFIER
                    PsiElement(DLanguageTokenType.ID)('foo')
                  DLanguageParametersImpl(PARAMETERS)
                    PsiElement(DLanguageTokenType.()('(')
                    PsiElement(DLanguageTokenType.))(')')
                  DLanguageFunctionBodyImpl(FUNCTION_BODY)
                    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
                        DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                          DLanguageStatementImpl(STATEMENT)
                            DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                              DLanguageIfStatementImpl(IF_STATEMENT)
                                PsiElement(DLanguageTokenType.if)('if')
                                PsiElement(DLanguageTokenType.()('(')
                                DLanguageExpressionImpl(EXPRESSION)
                                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                        DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                PsiElement(DLanguageTokenType.))(')')
                                DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                  DLanguageStatementImpl(STATEMENT)
                                    DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                                        PsiElement(DLanguageTokenType.{)('{')
                                        DLanguageDeclarationsAndStatementsImpl(DECLARATIONS_AND_STATEMENTS)
                                          DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                            DLanguageStatementImpl(STATEMENT)
                                              DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                                                DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                                                  DLanguageExpressionImpl(EXPRESSION)
                                                    DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                      DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                                        DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                                            PsiElement(DLanguageTokenType.assert)('assert')
                                                            PsiElement(DLanguageTokenType.()('(')
                                                            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                              DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                                                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                                            PsiElement(DLanguageTokenType.))(')')
                                                  PsiElement(DLanguageTokenType.;)(';')
                                          PsiComment(DLanguageTokenType.LINE_COMMENT)('// never trips')
                                          DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                                            DLanguageDeclarationImpl(DECLARATION)
                                              DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                                                DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                                                  DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                                    DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                                      PsiElement(DLanguageTokenType.static)('static')
                                                      DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                                        PsiElement(DLanguageTokenType.assert)('assert')
                                                        PsiElement(DLanguageTokenType.()('(')
                                                        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                          DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                                            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                              DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                                PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                                        PsiElement(DLanguageTokenType.))(')')
                                                      PsiElement(DLanguageTokenType.;)(';')
                                        PsiComment(DLanguageTokenType.LINE_COMMENT)('// always trips')
                                        PsiElement(DLanguageTokenType.})('}')
                        DLanguageDeclarationOrStatementImpl(DECLARATION_OR_STATEMENT)
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                              DLanguageCompileConditionImpl(COMPILE_CONDITION)
                                DLanguageVersionConditionImpl(VERSION_CONDITION)
                                  PsiElement(DLanguageTokenType.version)('version')
                                  PsiElement(DLanguageTokenType.()('(')
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('BAR')
                                  PsiElement(DLanguageTokenType.))(')')
                              PsiElement(DLanguageTokenType.{)('{')
                              PsiElement(DLanguageTokenType.})('}')
                              PsiElement(DLanguageTokenType.else)('else')
                              PsiElement(DLanguageTokenType.{)('{')
                              DLanguageDeclarationImpl(DECLARATION)
                                DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                                  DLanguageStaticAssertDeclarationImpl(STATIC_ASSERT_DECLARATION)
                                    DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                      DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                                        PsiElement(DLanguageTokenType.static)('static')
                                        DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                                          PsiElement(DLanguageTokenType.assert)('assert')
                                          PsiElement(DLanguageTokenType.()('(')
                                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLanguageCmpExpressionImpl(CMP_EXPRESSION)
                                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
                                          PsiElement(DLanguageTokenType.))(')')
                                        PsiElement(DLanguageTokenType.;)(';')
                              PsiComment(DLanguageTokenType.LINE_COMMENT)('// trips when version BAR is not defined')
                              PsiElement(DLanguageTokenType.})('}')
                      PsiElement(DLanguageTokenType.})('}')
          PsiElement(DLanguageTokenType.})('}')