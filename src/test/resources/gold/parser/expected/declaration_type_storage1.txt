D Language File
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// ref declares the parameter x to be passed by reference')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.void)('void')
    FUNC_DECLARATION
      PsiElement(DLanguageTokenType.ID)('func')
      DLanguageParametersImpl(PARAMETERS)
        PsiElement(DLanguageTokenType.()('(')
        PARAMETER
          PsiElement(DLanguageTokenType.ref)('ref')
          DLanguageTypeImpl(TYPE)
            DLanguageTypeImpl(TYPE)
              PsiElement(DLanguageTokenType.int)('int')
          PsiElement(DLanguageTokenType.ID)('x')
        PsiElement(DLanguageTokenType.))(')')
      DLanguageFunctionBodyImpl(FUNCTION_BODY)
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                PsiElement(DLanguageTokenType.ID)('x')
                            PsiElement(DLanguageTokenType.++)('++')
                    PsiElement(DLanguageTokenType.;)(';')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('// so modifications to x will be visible in the caller')
          PsiElement(DLanguageTokenType.})('}')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.void)('void')
    FUNC_DECLARATION
      PsiElement(DLanguageTokenType.ID)('main')
      DLanguageParametersImpl(PARAMETERS)
        PsiElement(DLanguageTokenType.()('(')
        PsiElement(DLanguageTokenType.))(')')
      DLanguageFunctionBodyImpl(FUNCTION_BODY)
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageAutoDeclarationImpl(AUTO_DECLARATION)
                    DLanguageStorageClassImpl(STORAGE_CLASS)
                      PsiElement(DLanguageTokenType.auto)('auto')
                    DLanguageAutoDeclarationXImpl(AUTO_DECLARATION_X)
                      PsiElement(DLanguageTokenType.ID)('x')
                      PsiElement(DLanguageTokenType.=)('=')
                      DLanguageInitializerImpl(INITIALIZER)
                        DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                            DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('1')
                    PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                PsiElement(DLanguageTokenType.ID)('func')
                            PsiElement(DLanguageTokenType.()('(')
                            DLanguageArgumentListImpl(ARGUMENT_LIST)
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        PsiElement(DLanguageTokenType.ID)('x')
                            PsiElement(DLanguageTokenType.))(')')
                    PsiElement(DLanguageTokenType.;)(';')
            DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
              DLanguageStatementImpl(STATEMENT)
                DLanguageStatementNoCaseNoDefaultImpl(STATEMENT_NO_CASE_NO_DEFAULT)
                  DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                      DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                            DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                              PsiElement(DLanguageTokenType.assert)('assert')
                              PsiElement(DLanguageTokenType.()('(')
                              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                        PsiElement(DLanguageTokenType.ID)('x')
                                  DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                                    PsiElement(DLanguageTokenType.==)('==')
                                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                                      DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLanguageTokenType.INTEGER_LITERAL)('2')
                              PsiElement(DLanguageTokenType.))(')')
                    PsiElement(DLanguageTokenType.;)(';')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('// However, ref is not a type qualifier, so the following is illegal:')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('//ref(int) y; // Error: ref is not a type qualifier.')
          PsiElement(DLanguageTokenType.})('}')