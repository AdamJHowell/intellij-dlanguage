D Language File
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('Sequence')
  PsiErrorElement:<import declaration>, DLanguageTokenType.(, DLanguageTokenType.*, DLanguageTokenType.., DLanguageTokenType.;, DLanguageTokenType.@, DLanguageTokenType.ID, DLanguageTokenType.[, DLanguageTokenType.__gshared, DLanguageTokenType.abstract, DLanguageTokenType.alias, DLanguageTokenType.align, DLanguageTokenType.auto, DLanguageTokenType.bool, DLanguageTokenType.byte, DLanguageTokenType.cdouble, DLanguageTokenType.cfloat, DLanguageTokenType.char, DLanguageTokenType.class, DLanguageTokenType.const, DLanguageTokenType.creal, DLanguageTokenType.dchar, DLanguageTokenType.debug, DLanguageTokenType.delegate, DLanguageTokenType.delete, DLanguageTokenType.deprecated, DLanguageTokenType.double, DLanguageTokenType.else, DLanguageTokenType.enum, DLanguageTokenType.export, DLanguageTokenType.extern, DLanguageTokenType.final, DLanguageTokenType.float, DLanguageTokenType.function, DLanguageTokenType.idouble, DLanguageTokenType.if, DLanguageTokenType.ifloat, DLanguageTokenType.immutable, DLanguageTokenType.inout, DLanguageTokenType.int, DLanguageTokenType.interface, DLanguageTokenType.invariant, DLanguageTokenType.ireal, DLanguageTokenType.long, DLanguageTokenType.mixin, DLanguageTokenType.new, DLanguageTokenType.nothrow, DLanguageTokenType.override, DLanguageTokenType.package, DLanguageTokenType.pragma and ... expected, got '('
    <empty list>
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
            DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
              DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  DLanguageFunctionLiteralImpl(FUNCTION_LITERAL)
                    DLanguageParameterMemberAttributesImpl(PARAMETER_MEMBER_ATTRIBUTES)
                      DLanguageParametersImpl(PARAMETERS)
                        PsiElement(DLanguageTokenType.()('(')
                        DLanguageParameterListImpl(PARAMETER_LIST)
                          PARAMETER
                            DLanguageTypeImpl(TYPE)
                              DLanguageTypeCtorsImpl(TYPE_CTORS)
                                <empty list>
                              DLanguageBasicTypeImpl(BASIC_TYPE)
                                DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('TL')
                            PsiElement(DLanguageTokenType....)('...')
                        PsiElement(DLanguageTokenType.))(')')
                    DLanguageFunctionLiteralBodyImpl(FUNCTION_LITERAL_BODY)
                      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                        PsiElement(DLanguageTokenType.{)('{')
                        DLanguageStatementListImpl(STATEMENT_LIST)
                          DLanguageStatementImpl(STATEMENT)
                            DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                              DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                                DLanguageDeclarationImpl(DECLARATION)
                                  DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
                                    ALIAS_DECLARATION_SINGLE
                                      PsiElement(DLanguageTokenType.alias)('alias')
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('Sequence')
                                      PsiElement(DLanguageTokenType.=)('=')
                                      DLanguageTypeImpl(TYPE)
                                        DLanguageTypeCtorsImpl(TYPE_CTORS)
                                          <empty list>
                                        DLanguageBasicTypeImpl(BASIC_TYPE)
                                          DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                            IDENTIFIER
                                              PsiElement(DLanguageTokenType.ID)('TL')
                                      PsiElement(DLanguageTokenType.;)(';')
                        PsiElement(DLanguageTokenType.})('}')