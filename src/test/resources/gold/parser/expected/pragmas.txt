D Language File
  DLanguageDeclarationImpl(DECLARATION)
    DLanguagePragmaStatementImpl(PRAGMA_STATEMENT)
      DLanguagePragmaImpl(PRAGMA)
        DLanguagePragmaImpl(PRAGMA)
          PsiElement(DLanguageTokenType.pragma)('pragma')
          PsiElement(DLanguageTokenType.()('(')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('msg')
          PsiElement(DLanguageTokenType.))(')')
        PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// just by itself')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      DLanguagePragmaImpl(PRAGMA)
        PsiElement(DLanguageTokenType.pragma)('pragma')
        PsiElement(DLanguageTokenType.()('(')
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('msg')
        PsiElement(DLanguageTokenType.))(')')
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.int)('int')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('x')
        PsiElement(DLanguageTokenType.=)('=')
        DLanguageInitializerImpl(INITIALIZER)
          DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
      PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// influence one declaration')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      DLanguagePragmaImpl(PRAGMA)
        PsiElement(DLanguageTokenType.pragma)('pragma')
        PsiElement(DLanguageTokenType.()('(')
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('msg')
        PsiElement(DLanguageTokenType.))(')')
    DLanguageAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
      PsiElement(DLanguageTokenType.:)(':')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// influence subsequent declarations')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.float)('float')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('y')
        PsiElement(DLanguageTokenType.=)('=')
        DLanguageInitializerImpl(INITIALIZER)
          DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
      PsiElement(DLanguageTokenType.;)(';')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageTypeImpl(TYPE)
      DLanguageTypeImpl(TYPE)
        PsiElement(DLanguageTokenType.double)('double')
    DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
      DLanguageDeclaratorImpl(DECLARATOR)
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('a')
        PsiElement(DLanguageTokenType.=)('=')
        DLanguageInitializerImpl(INITIALIZER)
          DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                  DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
      PsiElement(DLanguageTokenType.;)(';')
  DLanguageDeclarationImpl(DECLARATION)
    DLanguageAttributeImpl(ATTRIBUTE)
      DLanguagePragmaImpl(PRAGMA)
        PsiElement(DLanguageTokenType.pragma)('pragma')
        PsiElement(DLanguageTokenType.()('(')
        IDENTIFIER
          PsiElement(DLanguageTokenType.ID)('msg')
        PsiElement(DLanguageTokenType.))(')')
    PsiComment(DLanguageTokenType.LINE_COMMENT)('// influence block of declarations')
    PsiElement(DLanguageTokenType.{)('{')
    DLanguageDeclarationImpl(DECLARATION)
      DLanguageTypeImpl(TYPE)
        DLanguageTypeImpl(TYPE)
          PsiElement(DLanguageTokenType.long)('long')
      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
        DLanguageDeclaratorImpl(DECLARATOR)
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('b')
          PsiElement(DLanguageTokenType.=)('=')
          DLanguageInitializerImpl(INITIALIZER)
            DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
        PsiElement(DLanguageTokenType.;)(';')
    DLanguageDeclarationImpl(DECLARATION)
      DLanguageTypeImpl(TYPE)
        DLanguageTypeImpl(TYPE)
          PsiElement(DLanguageTokenType.ulong)('ulong')
      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
        DLanguageDeclaratorImpl(DECLARATOR)
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('c')
          PsiElement(DLanguageTokenType.=)('=')
          DLanguageInitializerImpl(INITIALIZER)
            DLanguageNonVoidInitializerImpl(NON_VOID_INITIALIZER)
              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLanguageConditionalExpression_Impl(CONDITIONAL_EXPRESSION_)
                  DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                    DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                      PsiElement(DLanguageTokenType.INTEGER_LITERAL)('0')
        PsiElement(DLanguageTokenType.;)(';')
    PsiElement(DLanguageTokenType.})('}')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//todo libdparse can't parse this correctly, so temporarily excluded from the test cases.')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//unittest{')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//    pragma(msg) c = 9; // influence one statement')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//    pragma(msg)   // influence block of statements')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//    {')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//        b = -6;')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//        y = 9.7;')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//    }')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('//}')